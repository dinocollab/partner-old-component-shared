{"version":3,"file":"CreateTableTemplate.js","sources":["../../../src/ComponentsV2/TableTemplate/CreateTableTemplate.tsx"],"sourcesContent":["import React, { Component, ComponentType } from 'react'\r\nimport { Box, SxProps, Theme, styled } from '@mui/material'\r\nimport { DataGrid, GridSortModel, GridColDef, GridValidRowModel, DataGridProps, GridRowModel } from '@mui/x-data-grid'\r\nimport { GridCallbackDetails, GridFilterModel, GridPaginationInitialState, GridFeatureMode } from '@mui/x-data-grid'\r\nimport { CustomerGridToolbar } from './CustomerGridToolbar'\r\nimport { CustomGridFilterPanel } from './CustomGridFilterPanel'\r\nimport { GridColDefCconfig, IFetchModel, ITableMode, ITableOption, ITableTemplatePropBases } from './type'\r\nimport { ITableTemplateContext, ITableTemplateState, TableTemplateContext } from './TableTemplateContext'\r\nimport NoRowsOverlay from './NoRowsOverlay'\r\n\r\ntype ITableTemplateProps<T extends GridValidRowModel, Key extends keyof ITableMode<T>> = ITableTemplatePropBases<T> &\r\n  ITableMode<T>[Key] & {\r\n    sxWrapper?: SxProps<Theme>\r\n    ItemRowMenu?: ComponentType<React.PropsWithChildren<any>>\r\n  }\r\n\r\nexport const CreateTableTemplate = function <TModel extends GridValidRowModel>(\r\n  mode: keyof ITableMode<TModel>,\r\n  option: ITableOption<TModel>\r\n) {\r\n  return class TableTemplate\r\n    extends Component<ITableTemplateProps<TModel, keyof ITableMode<TModel>>, ITableTemplateState<TModel>>\r\n    implements ITableTemplateContext\r\n  {\r\n    static defaultState: ITableTemplateState<TModel> = {\r\n      PageInfo: { data: [], rowTotal: 0, page: 0, pageSize: 0 },\r\n      isLoading: true,\r\n    }\r\n    AbortController?: AbortController\r\n\r\n    constructor(props: ITableTemplateProps<TModel, keyof ITableMode<TModel>>) {\r\n      super(props)\r\n      this.state = TableTemplate.defaultState\r\n      this.columns = this.initial()\r\n    }\r\n    generateColumns = () => {\r\n      return Object.keys(option.config).map((key) => {\r\n        const opt = { ...option.config[key], field: key } as GridColDef\r\n        if (mode === 'Server' && !opt.type && opt.filterable !== false)\r\n          throw new Error(`When mode is Server you need set type for '${key}' column in 'GridColDef'`)\r\n        if (option.filterOperators) {\r\n          opt.filterOperators = option.filterOperators(opt)\r\n        }\r\n        return opt\r\n      })\r\n    }\r\n    columns: GridColDef<any, any, any>[]\r\n    initial() {\r\n      if (option.MenuField) {\r\n        const MenuField = typeof option.MenuField === 'function' ? option.MenuField(option) : option.MenuField\r\n\r\n        const FieldConfig = option.config[MenuField as string]\r\n        const { ItemRowMenu: ItemMenu } = this.props\r\n        if (FieldConfig && ItemMenu) {\r\n          const renderCell = FieldConfig.renderCell\r\n          FieldConfig.renderCell = (params) => {\r\n            return <ItemMenu data={params.row}>{renderCell ? renderCell(params) : params.value}</ItemMenu>\r\n          }\r\n        }\r\n      }\r\n      return this.generateColumns()\r\n    }\r\n\r\n    getPageInfo = () => {\r\n      if ('PageInfo' in this.props && this.props.PageInfo) {\r\n        return this.props.PageInfo\r\n      }\r\n      return this.state.PageInfo\r\n    }\r\n\r\n    getPagination = () => {\r\n      const pageInfo = this.getPageInfo()\r\n      return { page: pageInfo.page, pageSize: pageInfo.pageSize }\r\n    }\r\n\r\n    GetDataGridProp = () => {\r\n      let _DataGridProp: Omit<DataGridProps, 'columns'>\r\n      if (mode === 'Server') {\r\n        const pageInfo = this.getPageInfo()\r\n        _DataGridProp = {\r\n          initialState: { pagination: this.getPagination() },\r\n          rowCount: pageInfo.rowTotal ?? 0,\r\n          rows: pageInfo.data,\r\n          loading: this.state.isLoading,\r\n          onPageChange: this.onPageChange,\r\n          onPageSizeChange: this.onPageSizeChange,\r\n          onFilterModelChange: this.onServerFilterChange,\r\n          onSortModelChange: this.onSortModelChange,\r\n          filterMode: 'server' as GridFeatureMode,\r\n          paginationMode: 'server' as GridFeatureMode,\r\n          sortingMode: 'server' as GridFeatureMode,\r\n          filterModel: this.state.FilterModel,\r\n          sortModel: this.state.GridSortModel,\r\n        }\r\n      } else if (mode === 'Client' && 'data' in this.props) {\r\n        _DataGridProp = {\r\n          rows: this.props.data,\r\n          componentsProps: {\r\n            toolbar: {\r\n              showQuickFilter: true,\r\n              quickFilterProps: { debounceMs: 500 },\r\n            },\r\n          },\r\n        }\r\n      } else {\r\n        _DataGridProp = { rows: [] }\r\n      }\r\n      return _DataGridProp\r\n    }\r\n\r\n    onRowSelectionModelChange = (rowSelectionModel: GridRowModel, details: GridCallbackDetails) => {\r\n      this.setState({ details: details, selectionIds: rowSelectionModel })\r\n    }\r\n\r\n    onServerFilterChange = (model: GridFilterModel, details: GridCallbackDetails<'filter'>) => {\r\n      this.setState({ FilterModel: model, isLoading: true }, () => this.FetchData({ FilterModel: model, details }))\r\n    }\r\n\r\n    onPageChange = (page: number, details: GridCallbackDetails<any>) => {\r\n      this.PageInfoCache.page = page\r\n      this.PageNavidateFetch(details)\r\n    }\r\n\r\n    onPageSizeChange = (pageSize: number, details: GridCallbackDetails<any>) => {\r\n      this.PageInfoCache.pageSize = pageSize\r\n      this.PageNavidateFetch(details)\r\n    }\r\n\r\n    timer = 0\r\n    PageInfoCache: GridPaginationInitialState = {}\r\n    PageNavidateFetch = (details: GridCallbackDetails<any>) => {\r\n      clearTimeout(this.timer)\r\n      this.timer = setTimeout(() => {\r\n        this.setState({ PaginationModel: this.PageInfoCache, isLoading: true })\r\n        this.FetchData({ PaginationModel: this.PageInfoCache, details })\r\n      }, 250) as any\r\n    }\r\n\r\n    onSortModelChange = (model: GridSortModel, details: GridCallbackDetails) => {\r\n      this.setState({ GridSortModel: model, isLoading: true })\r\n      this.FetchData({ GridSortModel: model, details })\r\n    }\r\n\r\n    FetchData = async (model: Partial<IFetchModel>) => {\r\n      this.AbortController?.abort()\r\n      if (mode === 'Server' && 'ServerOption' in this.props) {\r\n        try {\r\n          this.AbortController = new AbortController()\r\n          const data = await this.props.ServerOption.FetchFilterData(\r\n            Object.assign(\r\n              {},\r\n              {\r\n                PaginationModel: this.state.PaginationModel,\r\n                FilterModel: this.state.FilterModel,\r\n                GridSortModel: this.state.GridSortModel,\r\n                abort: this.AbortController.signal,\r\n              },\r\n              model\r\n            )\r\n          )\r\n          if (this.props.IsInnerState === true) {\r\n            this.setState({ isLoading: false, PageInfo: data ?? TableTemplate.defaultState.PageInfo })\r\n          } else {\r\n            this.setState({ isLoading: false })\r\n          }\r\n        } catch {\r\n          this.setState({ isLoading: false })\r\n        }\r\n      }\r\n    }\r\n\r\n    isServerSide = () => mode === 'Server'\r\n\r\n    async componentDidMount() {\r\n      if (mode === 'Server' && 'ServerOption' in this.props) {\r\n        this.AbortController?.abort()\r\n        if (mode === 'Server' && 'ServerOption' in this.props) {\r\n          try {\r\n            this.AbortController = new AbortController()\r\n            const data = await this.props.ServerOption.FetchInitialData()\r\n            this.setState({ isLoading: false, PageInfo: data ?? TableTemplate.defaultState.PageInfo })\r\n          } catch {\r\n            this.setState({ isLoading: false })\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const CRUDPannel = this.props.CRUDPannel || (() => <></>)\r\n      return (\r\n        <TableTemplateContext.Provider value={this}>\r\n          <Wrapper sx={this.props.sxWrapper}>\r\n            {<CRUDPannel />}\r\n            <DataGrid\r\n              // row\r\n              pagination\r\n              getRowId={option.getRowId}\r\n              columns={this.columns}\r\n              {...this.GetDataGridProp()}\r\n              components={{\r\n                Toolbar: CustomerGridToolbar,\r\n                FilterPanel: (props: any) => <CustomGridFilterPanel {...props} />,\r\n                NoRowsOverlay,\r\n              }}\r\n              componentsProps={{ toolbar: { showQuickFilter: true, quickFilterProps: { debounceMs: 500 } } }}\r\n              style={{ border: 0 }}\r\n              checkboxSelection={true}\r\n              sx={{\r\n                border: 0,\r\n                '& .MuiTablePagination-root .MuiToolbar-root > p': { margin: 0 },\r\n                '& .MuiDataGrid-columnHeaderTitle': { fontWeight: 700, color: '#3c3c3c' },\r\n              }}\r\n              {...(this.props.InnerProps ?? {})}\r\n            />\r\n          </Wrapper>\r\n        </TableTemplateContext.Provider>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst Wrapper = styled(Box)({\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  border: '1px solid #e0e0e0',\r\n  borderRadius: '5px',\r\n})\r\n"],"names":["CreateTableTemplate","mode","option","_TableTemplate","_Component","TableTemplate","props","_this","_classCallCheck","_callSuper","_defineProperty","Object","keys","config","map","key","opt","_objectSpread","field","type","filterable","Error","concat","filterOperators","PageInfo","state","pageInfo","getPageInfo","page","pageSize","_DataGridProp","_pageInfo$rowTotal","initialState","pagination","getPagination","rowCount","rowTotal","rows","data","loading","isLoading","onPageChange","onPageSizeChange","onFilterModelChange","onServerFilterChange","onSortModelChange","filterMode","paginationMode","sortingMode","filterModel","FilterModel","sortModel","GridSortModel","componentsProps","toolbar","showQuickFilter","quickFilterProps","debounceMs","rowSelectionModel","details","setState","selectionIds","model","FetchData","PageInfoCache","PageNavidateFetch","clearTimeout","timer","setTimeout","PaginationModel","_ref","_asyncToGenerator","_regenerator","m","_callee","_this$AbortController","w","_context","n","AbortController","abort","p","ServerOption","FetchFilterData","assign","signal","v","IsInnerState","defaultState","a","_x","apply","arguments","columns","initial","_inherits","_createClass","value","MenuField","FieldConfig","ItemMenu","ItemRowMenu","renderCell","params","_jsx","row","children","generateColumns","_componentDidMount","_callee2","_this$AbortController2","_context2","FetchInitialData","componentDidMount","render","_this$props$InnerProp","CRUDPannel","_Fragment","TableTemplateContext","Provider","_jsxs","Wrapper","sx","sxWrapper","DataGrid","getRowId","GetDataGridProp","components","Toolbar","CustomerGridToolbar","FilterPanel","CustomGridFilterPanel","NoRowsOverlay","style","border","checkboxSelection","margin","fontWeight","color","InnerProps","Component","styled","Box","flex","display","flexDirection","borderRadius"],"mappings":"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"}