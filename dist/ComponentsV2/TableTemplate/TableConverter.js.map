{"version":3,"file":"TableConverter.js","sources":["../../../src/ComponentsV2/TableTemplate/TableConverter.ts"],"sourcesContent":["import { Dictionary } from '@reduxjs/toolkit'\r\nimport { GridFilterModel, GridFilterItem, GridLinkOperator, GridSortModel } from '@mui/x-data-grid'\r\nimport { EOperator, IConverterConfig, IFetchModel } from './type'\r\n\r\ninterface IResultFilterGraphql {\r\n  take?: number\r\n  skip?: number\r\n  filter?: string\r\n  sort?: Dictionary<string>[]\r\n}\r\n\r\ninterface IKeyGraphqlResult extends IResultFilterGraphql {\r\n  searchKeys?: string[]\r\n}\r\n\r\ntype TPaginationToFilter = (params: { pageSize: number; page: number }) => {\r\n  filter: { take?: number; skip?: number }\r\n  key: string\r\n}\r\n\r\nclass TableConverterBase {\r\n  graphql = (model: Partial<IFetchModel>, config: IConverterConfig) => {\r\n    const key = this.graphqlKey(model, config)\r\n    const page: number = model.PaginationModel?.page ?? config.pagination?.page ?? 0\r\n    const take: number = model.PaginationModel?.pageSize ?? config.pagination?.pageSize ?? 0\r\n    const filterResult: IResultFilterGraphql = { skip: page * take, take }\r\n\r\n    const filter = this.convertFilterModel(model, config)\r\n    const sort = this.convertSortModel(model.GridSortModel)\r\n    if (filter) filterResult.filter = filter\r\n    if (sort && sort.length > 0) filterResult.sort = sort\r\n\r\n    return { filter: filterResult, key }\r\n  }\r\n\r\n  private graphqlKey = (model: Partial<IFetchModel>, config: IConverterConfig) => {\r\n    const page: number = model.PaginationModel?.page ?? config.pagination?.page ?? 0\r\n    const take: number = model.PaginationModel?.pageSize ?? config.pagination?.pageSize ?? 0\r\n    const searchKeys: string[] | undefined = model.FilterModel?.quickFilterValues\r\n    const filter = TableConverter.convertFilterOperator(model.FilterModel)\r\n    const sort = TableConverter.convertSortModel(model.GridSortModel)\r\n\r\n    const keys: IKeyGraphqlResult = { skip: page * take, take }\r\n    if (filter) keys.filter = filter\r\n    if (sort && sort.length > 0) keys.sort = sort\r\n    if (searchKeys && searchKeys.length > 0) keys.searchKeys = searchKeys\r\n\r\n    return btoa(JSON.stringify(keys))\r\n  }\r\n\r\n  paginationToFilter: TPaginationToFilter = (params) => {\r\n    const filter = { skip: params.page * params.pageSize, take: params.pageSize }\r\n    return { filter, key: btoa(JSON.stringify(filter)) }\r\n  }\r\n\r\n  private mapOperator = (item: GridFilterItem) => {\r\n    if (!item.operatorValue || !item.value) return ''\r\n    switch (parseInt(item.operatorValue)) {\r\n      case EOperator.Contains:\r\n        return `${item.columnField}.contains(\"${item.value}\")`\r\n      case EOperator.Equal:\r\n        return `${item.columnField}==\"${item.value}\"`\r\n      case EOperator.NotEqual:\r\n        return `${item.columnField}!=\"${item.value}\"`\r\n      case EOperator.GreaterThan:\r\n        return `${item.columnField}>\"${item.value}\"`\r\n      case EOperator.GreaterThanOrEqual:\r\n        return `${item.columnField}>=\"${item.value}\"`\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  private convertSortModel = (model?: GridSortModel): Dictionary<string>[] => {\r\n    let sort: Dictionary<string>[] = []\r\n    const idDoNotAddSort = model && model[0] && model[0].field && model[0].field.includes('.')\r\n    if (model && model[0] && model[0].sort && !idDoNotAddSort) sort = [{ [model[0].field]: model[0].sort.toUpperCase() ?? 'ASC' }]\r\n    return sort\r\n  }\r\n\r\n  private convertFilterModel = (model: Partial<IFetchModel>, config: IConverterConfig): string => {\r\n    const filterSearch = this.converSearchFilterModel({\r\n      searchKeys: model.FilterModel?.quickFilterValues,\r\n      searchOptions: config.searchOptions.map<string>((e) => e.toString()),\r\n    })\r\n    const filterOperator = this.convertFilterOperator(model.FilterModel)\r\n    let concatenation = filterSearch && filterOperator ? ' || ' : ''\r\n    return `${filterSearch ? filterSearch + concatenation : ''}${filterOperator ?? ''}`\r\n  }\r\n\r\n  private convertFilterOperator = (model?: GridFilterModel): string => {\r\n    if (!model) return ''\r\n    const filters = model.items.map(this.mapOperator)\r\n    let concatenation = ' || '\r\n    if (model.linkOperator === GridLinkOperator.And) concatenation = ' && '\r\n    return filters.filter((e) => !!e).join(concatenation)\r\n  }\r\n\r\n  private converSearchFilterModel = (params: { searchKeys?: any[]; searchOptions: string[] }) => {\r\n    const arr = (params.searchKeys ?? []).map((e) => {\r\n      return e ? params.searchOptions.map((s) => `${s}.contains(\"${e}\")`).join(' || ') : undefined\r\n    })\r\n    return arr.filter((e) => !!e).join(' || ')\r\n  }\r\n}\r\nexport const TableConverter = new TableConverterBase()\r\nexport default TableConverter\r\n"],"names":["TableConverterBase","_createClass","_this","_classCallCheck","_defineProperty","model","config","_ref","_model$PaginationMode","_model$PaginationMode2","_config$pagination","_ref2","_model$PaginationMode3","_model$PaginationMode4","_config$pagination2","key","graphqlKey","page","PaginationModel","pagination","take","pageSize","filterResult","skip","filter","convertFilterModel","sort","convertSortModel","GridSortModel","length","_ref3","_model$PaginationMode5","_model$PaginationMode6","_config$pagination3","_ref4","_model$PaginationMode7","_model$PaginationMode8","_config$pagination4","_model$FilterModel","searchKeys","FilterModel","quickFilterValues","TableConverter","convertFilterOperator","keys","btoa","JSON","stringify","params","item","operatorValue","value","parseInt","EOperator","Contains","concat","columnField","Equal","NotEqual","GreaterThan","GreaterThanOrEqual","_model$0$sort$toUpper","idDoNotAddSort","field","includes","toUpperCase","_model$FilterModel2","filterSearch","converSearchFilterModel","searchOptions","map","e","toString","filterOperator","concatenation","filters","items","mapOperator","linkOperator","GridLinkOperator","And","join","_params$searchKeys","arr","s","undefined"],"mappings":"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"}