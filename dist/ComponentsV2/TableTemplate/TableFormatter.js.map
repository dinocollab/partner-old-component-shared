{"version":3,"file":"TableFormatter.js","sources":["../../../src/ComponentsV2/TableTemplate/TableFormatter.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Chip, Stack, Tooltip, TooltipProps, Typography, TypographyProps, styled, tooltipClasses } from '@mui/material'\r\n\r\nclass TableFormatterBase {\r\n  _parseArray = (args: string) => {\r\n    try {\r\n      const arr = JSON.parse(args ?? 'error')\r\n      if (Array.isArray(arr)) return arr\r\n      else return []\r\n    } catch (error) {\r\n      return []\r\n    }\r\n  }\r\n\r\n  date = (params?: any) => (params ? new Date(params).toLocaleString() : '')\r\n\r\n  tooltip = (args: string) => {\r\n    if (!args) return <></>\r\n    return (\r\n      <Tooltip title={args} placement=\"top\">\r\n        <Typography noWrap>{args}</Typography>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  arrayChip = (args: string, name: string) => {\r\n    const arr = this._parseArray(args)\r\n    const temps = arr.reduce((a: string[], b: string) => {\r\n      a.push(...b.split(/\\W+/))\r\n      return a\r\n    }, [])\r\n    return this.chips(temps, name)\r\n  }\r\n\r\n  chips = (args: string[], name: string) => {\r\n    const chipElements = args.map((e, i) => <CustomChip key={i} label={e} size=\"small\" variant=\"outlined\" />)\r\n    return (\r\n      <HtmlTooltip\r\n        placement=\"left\"\r\n        title={\r\n          <Stack sx={{ gap: '4px', py: '6px', minWidth: '200px', maxWidth: '400px ' }}>\r\n            <TooltipHeaderText>{name}</TooltipHeaderText>\r\n            <Stack direction=\"row\" spacing={1} sx={{ gap: '4px', flexWrap: 'wrap' }}>\r\n              {chipElements}\r\n            </Stack>\r\n          </Stack>\r\n        }\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          sx={{ gap: '4px', flex: 1, alignItems: 'center', height: '100%', width: '100%', overflow: 'hidden' }}\r\n        >\r\n          {chipElements}\r\n        </Stack>\r\n      </HtmlTooltip>\r\n    )\r\n  }\r\n}\r\nexport const TableFormatter = new TableFormatterBase()\r\nexport default TableFormatter\r\n\r\nconst TooltipHeaderText = styled((props: TypographyProps) => <Typography variant=\"subtitle1\" {...props} />)({\r\n  color: '#0095ff',\r\n  fontWeight: 700,\r\n})\r\n\r\nconst HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: '#fff',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 500,\r\n    minHeight: 120,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))\r\n\r\nconst CustomChip = styled(Chip)({\r\n  '&.MuiChip-root': { margin: '0!important' },\r\n  '& .MuiChip-label': { mt: '2px' },\r\n})\r\n"],"names":["TableFormatterBase","_createClass","_this","_classCallCheck","_defineProperty","args","arr","JSON","parse","Array","isArray","error","params","Date","toLocaleString","_jsx","Tooltip","title","placement","children","Typography","noWrap","name","_parseArray","temps","reduce","a","b","push","apply","_toConsumableArray","split","chips","chipElements","map","e","i","CustomChip","label","size","variant","HtmlTooltip","_jsxs","Stack","sx","gap","py","minWidth","maxWidth","TooltipHeaderText","direction","spacing","flexWrap","flex","alignItems","height","width","overflow","TableFormatter","styled","props","_objectSpread","color","fontWeight","_ref","className","_objectWithoutProperties","_excluded","arrow","classes","popper","_ref2","theme","concat","tooltipClasses","tooltip","backgroundColor","minHeight","fontSize","typography","pxToRem","border","Chip","margin","mt"],"mappings":";;;;;AACuH,IAEjHA,kBAAkB,gBAAAC,YAAA,CAAA,SAAAD,kBAAA,GAAA;AAAA,EAAA,IAAAE,KAAA,GAAA,IAAA;AAAAC,EAAAA,eAAA,OAAAH,kBAAA,CAAA;EAAAI,eAAA,CAAA,IAAA,EAAA,aAAA,EACR,UAACC,IAAY,EAAI;IAC7B,IAAI;AACF,MAAA,IAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,KAAA,IAAA,IAAJA,IAAI,KAAA,KAAA,CAAA,GAAJA,IAAI,GAAI,OAAO,CAAC;AACvC,MAAA,IAAII,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE,OAAOA,GAAG,CAAA,KAC7B,OAAO,EAAE;KACf,CAAC,OAAOK,KAAK,EAAE;AACd,MAAA,OAAO,EAAE;AACV;GACF,CAAA;EAAAP,eAAA,CAAA,IAAA,EAAA,MAAA,EAEM,UAACQ,MAAY,EAAA;AAAA,IAAA,OAAMA,MAAM,GAAG,IAAIC,IAAI,CAACD,MAAM,CAAC,CAACE,cAAc,EAAE,GAAG,EAAE;GAAC,CAAA;EAAAV,eAAA,CAAA,IAAA,EAAA,SAAA,EAEhE,UAACC,IAAY,EAAI;IACzB,IAAI,CAACA,IAAI,EAAE,OAAOU,iBAAK;IACvB,OACEA,IAACC,OAAO,EAAA;AAACC,MAAAA,KAAK,EAAEZ,IAAI;AAAEa,MAAAA,SAAS,EAAC,KAAK;AACnCC,MAAAA,QAAA,EAAAJ,GAAA,CAACK,UAAU,EAAC;AAAAC,QAAAA,MAAM;kBAAEhB;OAAI;AAChB,KAAA,CAAA;GAEb,CAAA;AAAAD,EAAAA,eAAA,CAEW,IAAA,EAAA,WAAA,EAAA,UAACC,IAAY,EAAEiB,IAAY,EAAI;AACzC,IAAA,IAAMhB,GAAG,GAAGJ,KAAI,CAACqB,WAAW,CAAClB,IAAI,CAAC;IAClC,IAAMmB,KAAK,GAAGlB,GAAG,CAACmB,MAAM,CAAC,UAACC,CAAW,EAAEC,CAAS,EAAI;AAClDD,MAAAA,CAAC,CAACE,IAAI,CAAAC,KAAA,CAANH,CAAC,EAAAI,kBAAA,CAASH,CAAC,CAACI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;AACzB,MAAA,OAAOL,CAAC;KACT,EAAE,EAAE,CAAC;AACN,IAAA,OAAOxB,KAAI,CAAC8B,KAAK,CAACR,KAAK,EAAEF,IAAI,CAAC;GAC/B,CAAA;AAAAlB,EAAAA,eAAA,CAEO,IAAA,EAAA,OAAA,EAAA,UAACC,IAAc,EAAEiB,IAAY,EAAI;IACvC,IAAMW,YAAY,GAAG5B,IAAI,CAAC6B,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAA;MAAA,OAAKrB,GAAC,CAAAsB,UAAU,EAAS;AAAAC,QAAAA,KAAK,EAAEH,CAAC;AAAEI,QAAAA,IAAI,EAAC,OAAO;AAACC,QAAAA,OAAO,EAAC;OAAU,EAA5CJ,CAAC,CAA8C;KAAC,CAAA;IACzG,OACErB,IAAC0B,WAAW,EAAA;AACVvB,MAAAA,SAAS,EAAC,MAAM;AAChBD,MAAAA,KAAK,EACHyB,IAAA,CAACC,KAAK,EAAC;AAAAC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,GAAG,EAAE,KAAK;AAAEC,UAAAA,EAAE,EAAE,KAAK;AAAEC,UAAAA,QAAQ,EAAE,OAAO;AAAEC,UAAAA,QAAQ,EAAE;SAAU;AACzE7B,QAAAA,QAAA,EAAA,CAAAJ,GAAA,CAACkC,iBAAiB,EAAA;AAAA9B,UAAAA,QAAA,EAAEG;AAAI,SAAA,CAAqB,EAC7CP,GAAC,CAAA4B,KAAK,EAAC;AAAAO,UAAAA,SAAS,EAAC,KAAK;AAACC,UAAAA,OAAO,EAAE,CAAC;AAAEP,UAAAA,EAAE,EAAE;AAAEC,YAAAA,GAAG,EAAE,KAAK;AAAEO,YAAAA,QAAQ,EAAE;WAAQ;AACpEjC,UAAAA,QAAA,EAAAc;AACK,SAAA,CAAA;AAAA,OAAA,CACF;gBAGVlB,GAAC,CAAA4B,KAAK,EACJ;AAAAO,QAAAA,SAAS,EAAC,KAAK;AACfN,QAAAA,EAAE,EAAE;AAAEC,UAAAA,GAAG,EAAE,KAAK;AAAEQ,UAAAA,IAAI,EAAE,CAAC;AAAEC,UAAAA,UAAU,EAAE,QAAQ;AAAEC,UAAAA,MAAM,EAAE,MAAM;AAAEC,UAAAA,KAAK,EAAE,MAAM;AAAEC,UAAAA,QAAQ,EAAE;SAAU;kBAEnGxB;OAAY;AAEH,KAAA,CAAA;GAEjB,CAAA;AAAA,CAAA,CAAA;IAEUyB,cAAc,GAAG,IAAI1D,kBAAkB;AAGpD,IAAMiD,iBAAiB,GAAGU,MAAM,CAAC,UAACC,KAAsB,EAAA;AAAA,EAAA,OAAK7C,IAACK,UAAU,EAAAyC,cAAA,CAAA;AAACrB,IAAAA,OAAO,EAAC;GAAgBoB,EAAAA,KAAK,CAAA,CAAI;AAAA,CAAA,CAAC,CAAC;AAC1GE,EAAAA,KAAK,EAAE,SAAS;AAChBC,EAAAA,UAAU,EAAE;AACb,CAAA,CAAC;AAEF,IAAMtB,WAAW,GAAGkB,MAAM,CAAC,UAAAK,IAAA,EAAA;AAAA,EAAA,IAAGC,SAAS,GAAAD,IAAA,CAATC,SAAS;AAAKL,IAAAA,KAAK,GAAAM,wBAAA,CAAAF,IAAA,EAAAG,SAAA,CAAA;EAAA,OAC/CpD,GAAC,CAAAC,OAAO,EAAA6C,cAAA,CAAAA,cAAA,KAAKD,KAAK,CAAA,EAAA,EAAA,EAAA;AAAEQ,IAAAA,KAAK,EAAA,IAAA;AAACC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAEL;;AAAW,GAAA,CAAI,CAAA;AAAA,CAC7D,CAAC,CAAC,UAAAM,KAAA,EAAA;AAAA,EAAA,IAAGC,KAAK,GAAAD,KAAA,CAALC,KAAK;AAAA,EAAA,OAAApE,eAAA,CAAAqE,EAAAA,EAAAA,KAAAA,CAAAA,MAAA,CACFC,cAAc,CAACC,OAAO,CAAK,EAAA;AAChCC,IAAAA,eAAe,EAAE,MAAM;AACvBd,IAAAA,KAAK,EAAE,qBAAqB;AAC5Bd,IAAAA,QAAQ,EAAE,GAAG;AACb6B,IAAAA,SAAS,EAAE,GAAG;IACdC,QAAQ,EAAEN,KAAK,CAACO,UAAU,CAACC,OAAO,CAAC,EAAE,CAAC;AACtCC,IAAAA,MAAM,EAAE;GACT,CAAA;AAAA,CACD,CAAC;AAEH,IAAM5C,UAAU,GAAGsB,MAAM,CAACuB,IAAI,CAAC,CAAC;AAC9B,EAAA,gBAAgB,EAAE;AAAEC,IAAAA,MAAM,EAAE;GAAe;AAC3C,EAAA,kBAAkB,EAAE;AAAEC,IAAAA,EAAE,EAAE;AAAO;AAClC,CAAA,CAAC;;;;"}