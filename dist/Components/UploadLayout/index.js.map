{"version":3,"file":"index.js","sources":["../../../src/Components/UploadLayout/index.tsx"],"sourcesContent":["import { Box, Button, Typography } from '@mui/material'\r\nimport React, { PureComponent } from 'react'\r\nimport UploadStatus from './UploadStatus'\r\nimport { IProcessItem } from './types'\r\nimport { UploadMonitor } from './UploadMonitor'\r\n\r\nexport * from './types'\r\n\r\ninterface IUploadLayoutProps {\r\n  Horizontal: 'end' | 'start'\r\n  Vertical: 'end' | 'start'\r\n  ContentHeight: number\r\n  ContentWidth: number\r\n  open: boolean\r\n  UploadExecutor: (item: IProcessItem, progress: (value: number) => void) => Promise<void>\r\n  onClose?: (isCompleted: boolean) => void\r\n  inline?: boolean\r\n}\r\ninterface IUploadLayoutState {\r\n  open: boolean\r\n  showComfirm: boolean\r\n}\r\nexport interface IUploadLayoutContext {\r\n  state: IUploadLayoutState\r\n  getErrors: () => IProcessItem[]\r\n  getComplete: () => IProcessItem[]\r\n  onItemClose: (item: IProcessItem) => void\r\n  onItemRetry: (item: IProcessItem) => void\r\n  onRetryAll: () => void\r\n  addItems: (items: Omit<IProcessItem, 'Value' | 'Signal'>[]) => void\r\n  Show: () => void\r\n  Close: () => void\r\n  items: IProcessItem[]\r\n  renderUploadContent: () => JSX.Element\r\n}\r\nexport const Sleep = (sec: number) => new Promise((res) => setTimeout(res, sec))\r\nexport const UploadLayoutContext = React.createContext<IUploadLayoutContext>({} as any)\r\n\r\nexport default class UploadLayout\r\n  extends PureComponent<React.PropsWithChildren<IUploadLayoutProps>, IUploadLayoutState>\r\n  implements IUploadLayoutContext\r\n{\r\n  constructor(props: IUploadLayoutProps) {\r\n    super(props)\r\n    this.state = {\r\n      open: props.open,\r\n      showComfirm: false,\r\n    }\r\n    this._monitor = new UploadMonitor(3, this.executor, this.getItem)\r\n    this._monitor.addEventListen('Error', this.uploadError)\r\n    this._monitor.addEventListen('Completed', this.uploadComplete)\r\n  }\r\n  static defaultProps = {\r\n    Horizontal: 'end',\r\n    Vertical: 'end',\r\n    ContentHeight: 400,\r\n    ContentWidth: 400,\r\n    open: false,\r\n  }\r\n  isUnmounted = false\r\n  _monitor: UploadMonitor<IProcessItem>\r\n  items: IProcessItem[] = []\r\n  componentWillUnmount(): void {\r\n    this.isUnmounted = true\r\n    this._monitor.events.removeAllListeners()\r\n    this.items.forEach((x) => x.Signal?.abort())\r\n  }\r\n  addItems = (items: Omit<IProcessItem, 'Value' | 'Signal'>[]) => {\r\n    this.items.push(...items)\r\n    this._monitor.start()\r\n  }\r\n  getItem = () => {\r\n    const item = this.items.filter((x) => x.Status === 'Pending')[0]\r\n    if (item) {\r\n      item.Status = 'Processing'\r\n    }\r\n    return item\r\n  }\r\n  executor = async (item: IProcessItem) => {\r\n    await this.props.UploadExecutor(item, (value) => {\r\n      item.Value = value\r\n      this.updateItems()\r\n    })\r\n    item.Status = 'Completed'\r\n    this.updateItems()\r\n  }\r\n  uploadComplete = (item: IProcessItem) => {\r\n    item.Status = 'Completed'\r\n    this.updateItems()\r\n  }\r\n  uploadError: any = (data: [IProcessItem, Error]) => {\r\n    data[0].Status = 'Error'\r\n    this.updateItems()\r\n  }\r\n  onItemClose = (item: IProcessItem) => {\r\n    item.Signal?.abort()\r\n    const index = this.items.findIndex((x) => x === item)\r\n    this.items.splice(index, 1)\r\n    this.updateItems()\r\n    this._monitor.start()\r\n  }\r\n  onItemRetry = (item: IProcessItem) => {\r\n    item.Status = 'Pending'\r\n    this.updateItems()\r\n    this._monitor.start()\r\n  }\r\n  onRetryAll = () => {\r\n    this.items.filter((x) => x.Status === 'Error').forEach((x) => (x.Status = 'Pending'))\r\n    this.updateItems()\r\n    this._monitor.start()\r\n  }\r\n  _timer = new Date()\r\n  updateItems = () => {\r\n    // const tmp = new Date()\r\n    // var diff = (tmp.getTime() - this._timer.getTime()) as number;\r\n    // this._timer = tmp\r\n    // if (diff < 500) return\r\n    this.forceUpdate()\r\n  }\r\n  getErrors = () => this.items.filter((x) => x.Status === 'Error')\r\n  getComplete = () => this.items.filter((x) => x.Status === 'Completed')\r\n\r\n  // setState = <K extends keyof IUploadLayoutState>(state: Pick<IUploadLayoutState, K> | IUploadLayoutState, callback?: () => void) => {\r\n  //     if (this.isUnmounted) return\r\n  //     super.setState(state, callback)\r\n  // }\r\n\r\n  isCompleted = () => {\r\n    return !this.items.some((x) => x.Status === 'Pending' || x.Status === 'Processing')\r\n  }\r\n  Close = () => {\r\n    this.items.forEach((x) => x.Signal?.abort())\r\n    this.items = []\r\n    this.setState({ open: false, showComfirm: false })\r\n  }\r\n  CheckClose: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n    if (!this.isCompleted()) {\r\n      this.refUploadStatus.current?.UnCollapse()\r\n      this.setState({ showComfirm: true })\r\n      return\r\n    }\r\n    this.props.onClose && this.props.onClose(true)\r\n    this.Close()\r\n  }\r\n  Show = () => {\r\n    this.setState({ open: true })\r\n  }\r\n  closeComfirm = () => {\r\n    this.setState({ showComfirm: false })\r\n  }\r\n  componentDidMount(): void {}\r\n  renderUploadContent = () => {\r\n    return (\r\n      <Box sx={{ width: '100%', height: '100%', display: 'flex' }}>\r\n        <UploadStatus ref={this.refUploadStatus} ContentHeight={this.props.ContentHeight} onUploadClose={this.CheckClose} />\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            background: '#00000045',\r\n            borderRadius: '5px',\r\n            display: this.state.showComfirm ? 'flex' : 'none',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: '20px',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              background: 'white',\r\n              borderRadius: '10px',\r\n              padding: '10px',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <Typography>There are files that have not been uploaded and they will not be uploaded!</Typography>\r\n            <Box>\r\n              <Button\r\n                sx={{ marginRight: '10px' }}\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  this.Close()\r\n                  this.props.onClose && this.props.onClose(false)\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Button variant=\"outlined\" onClick={this.closeComfirm}>\r\n                No\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    )\r\n  }\r\n  refUploadStatus = React.createRef<UploadStatus>()\r\n  render() {\r\n    return (\r\n      <UploadLayoutContext.Provider value={this}>\r\n        {this.props.children}\r\n        {this.props.inline !== true ? (\r\n          <Box\r\n            sx={{\r\n              display: this.state.open ? 'flex' : 'none',\r\n              justifyContent: this.props.Horizontal,\r\n              alignItems: this.props.Vertical,\r\n              position: 'fixed',\r\n              zIndex: 1000,\r\n              width: this.props.ContentWidth,\r\n              top: this.props.Vertical === 'start' ? 0 : undefined,\r\n              bottom: this.props.Vertical === 'end' ? 0 : undefined,\r\n              left: this.props.Horizontal === 'start' ? 0 : undefined,\r\n              right: this.props.Horizontal === 'end' ? 0 : undefined,\r\n            }}\r\n          >\r\n            {this.state.open ? this.renderUploadContent() : <></>}\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </UploadLayoutContext.Provider>\r\n    )\r\n  }\r\n}\r\n"],"names":["Sleep","sec","Promise","res","setTimeout","UploadLayoutContext","React","createContext","UploadLayout","_PureComponent","props","_this","_classCallCheck","_callSuper","_defineProperty","items","_this$items","push","apply","_toConsumableArray","_monitor","start","item","filter","x","Status","_ref","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","UploadExecutor","value","Value","updateItems","a","_x","arguments","data","_item$Signal","Signal","abort","index","findIndex","splice","forEach","Date","forceUpdate","some","_x$Signal","setState","open","showComfirm","e","stopPropagation","preventDefault","isCompleted","_this$refUploadStatus","refUploadStatus","current","UnCollapse","onClose","Close","_jsxs","Box","sx","width","height","display","children","_jsx","UploadStatus","ref","ContentHeight","onUploadClose","CheckClose","position","top","right","bottom","left","background","borderRadius","state","justifyContent","alignItems","padding","flexDirection","Typography","Button","marginRight","variant","onClick","closeComfirm","createRef","UploadMonitor","executor","getItem","addEventListen","uploadError","uploadComplete","_inherits","_createClass","key","componentWillUnmount","isUnmounted","events","removeAllListeners","_x$Signal2","componentDidMount","render","Provider","inline","Horizontal","Vertical","zIndex","ContentWidth","undefined","renderUploadContent","_Fragment","PureComponent"],"mappings":"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"}