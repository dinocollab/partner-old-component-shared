{"version":3,"file":"index.js","sources":["../../../src/Components/Models/index.ts"],"sourcesContent":["import { Dictionary } from '@reduxjs/toolkit'\r\nimport { RoleKeyExternalSite, RoleKeyInternalSite } from '../Helper/RoleKey'\r\n\r\nexport type UserInputType = 'Create' | 'Edit' | 'Profile'\r\nexport interface IUserInputProfile {\r\n  Type: UserInputType\r\n  user?: IUser\r\n  DirectWhenClose?: string\r\n}\r\nexport interface IUser {\r\n  Id: string\r\n  FirstName: string\r\n  LastName: string\r\n  UserName: string\r\n  Email: string\r\n  Avatar: string\r\n  LockoutEnabled: boolean\r\n  LockoutEnd: string | null\r\n  DateCreated: string\r\n  IsLock: boolean\r\n  PhoneNumber: string\r\n  SigningDate: string\r\n  PersonAddress: string\r\n  PersonIdentityCard: string\r\n  DisplayName: string\r\n  //business info\r\n  CompanyName: string\r\n  Position: string\r\n  BusinessAddress: string\r\n  //payment info\r\n  BeneficiaryName: string\r\n  AccountNumber: string\r\n  BankName: string\r\n  IdentityCard: string\r\n  SwiftNumber: string\r\n  BankAddress: string\r\n  AutoPassword?: string\r\n  Roles: string[]\r\n  UserCreatorId: string\r\n  DisplayCreator: string\r\n  EmailCreator: string\r\n  UserNameCreator: string\r\n  //contact\r\n  ContactInfoMap: { [key: string]: IContactInfo }\r\n  Tags: string\r\n}\r\n\r\nexport interface IChangePassword {\r\n  Id: string\r\n  CurrentPassword: string\r\n  NewPassword: string\r\n  ConfirmPassword: string\r\n}\r\n\r\nexport interface IAccountPermission {\r\n  Id: string\r\n  Roles: (RoleKeyInternalSite | RoleKeyExternalSite) | (RoleKeyInternalSite | RoleKeyExternalSite)[]\r\n}\r\nexport interface EntityTimeBase {\r\n  DateCreated: string\r\n  DateUpdated: string\r\n}\r\nexport interface IUserCreator {\r\n  UserCreatorId: string\r\n}\r\nexport interface IAccountBank {\r\n  Id: string\r\n  BeneficiaryName: string\r\n  AccountNumber: string\r\n  BankName: string\r\n  IdentityCard: string\r\n  SwiftNumber: string\r\n  BankAddress: string\r\n  UserId: string\r\n}\r\nexport interface IReportPayment {\r\n  Name: string\r\n  TransactionId: string\r\n  ReportId: string\r\n  Description: string\r\n  Payout: number\r\n  USDRate: number\r\n}\r\nexport interface ISelectModel {\r\n  Id: string\r\n  Name: string\r\n  UserId: string\r\n}\r\nexport interface IVideoPrice {\r\n  Id: string\r\n  Summary: string\r\n  Price: number\r\n  UserId: string\r\n  Actions?: string\r\n}\r\nexport interface IMediaChannel {\r\n  Id: string\r\n  Platform: string\r\n  Name: string\r\n  Summary: string\r\n  Link: string\r\n  UserId: string\r\n  Actions?: string\r\n}\r\nexport interface IExtendMediaChannel extends IMediaChannel {\r\n  Email: string\r\n  Manage: string\r\n}\r\nexport interface IContactInfo {\r\n  Id: string\r\n  Platform: string\r\n  Name: string\r\n  Link: string\r\n  UserId: string\r\n}\r\n\r\nexport interface IAsset {\r\n  Kind: string\r\n  Id: string\r\n  Type: string\r\n  Title: string\r\n  CustomId: string\r\n  MediaId?: string\r\n  MediaName?: string\r\n  TimeCreated: string\r\n  LabelName: string\r\n}\r\nexport interface IAssetLabel {\r\n  Name: string\r\n  UserId: string\r\n  Email: string\r\n  AmountAssets: number\r\n}\r\n\r\nexport interface INamingFolder {\r\n  FolderName: string\r\n  FolderId: string\r\n  UserIds: string[] | string\r\n  Users: string\r\n  FileAmount: number\r\n}\r\n\r\nexport interface INamingFolderExtend extends INamingFolder {\r\n  Actions?: string\r\n}\r\n\r\nexport enum MediaNetworkStatus {\r\n  Active = 'Active',\r\n  Inactive = 'Inactive',\r\n}\r\nexport interface IMediaNetwork extends EntityTimeBase {\r\n  Id: string\r\n  Name: string\r\n  Status: MediaNetworkStatus\r\n  OwnerId: string\r\n  AccountJson: string\r\n  Description: string\r\n  Types: EChannelType[]\r\n}\r\nexport interface IMediaNetworkInfo {\r\n  Data: IMediaNetwork[]\r\n  Types: EChannelType[]\r\n}\r\n\r\nexport enum JoinNetworkStatus {\r\n  Pending = 'Pending',\r\n  Inviting = 'Inviting',\r\n  Joined = 'Joined',\r\n  Rejected = 'Rejected',\r\n}\r\n\r\nexport interface IChannelNetwork extends EntityTimeBase {\r\n  Id: string\r\n  ChannelId: string\r\n  Name: string\r\n  UserId: string\r\n  DisplayName: string\r\n  Email: string\r\n  UserEmail: string\r\n  // Network: string;\r\n  // Status: ChannelNetworkStatus;\r\n  // NetworkId: string;\r\n  // Percentage: number\r\n}\r\nexport enum WhitelistStatus {\r\n  Pending = 'Pending',\r\n  Accepted = 'Accepted',\r\n  Rejected = 'Rejected',\r\n}\r\nexport interface IWhitelist extends EntityTimeBase {\r\n  Id: string\r\n  ChannelId: string\r\n  ChannelName: string\r\n  AcceptedDate: string\r\n  Status: WhitelistStatus\r\n  NetworkId: string\r\n  UserId: string\r\n  DisplayName: string\r\n}\r\nexport interface IItemSummary {\r\n  Folder: number\r\n  File: number\r\n  Audio: number\r\n  Image: number\r\n  Video: number\r\n  Asset: number\r\n  AssetLabel: number\r\n  ChannelContent: number\r\n}\r\n\r\nexport interface ITotalEarning {\r\n  [key: string]: number\r\n}\r\nexport interface IBillingSummary {\r\n  Title: string\r\n  Total: number\r\n  Details: number[]\r\n}\r\nexport interface IEarningCardDTO {\r\n  Asset: number\r\n  Channel: number\r\n  AssetDate?: string\r\n  ChannelDate?: string\r\n}\r\nexport interface ISummaryChart {\r\n  ChartData: { [key: string]: IBillingSummary }\r\n  EarningCards: { [key: string]: IEarningCardDTO }\r\n}\r\nexport interface IUserReport {\r\n  UserId: string\r\n  DisplayName: string\r\n  Email: string\r\n  Manager: string\r\n  Monthly: string\r\n  Video: number\r\n  Audio: number\r\n  Content: number\r\n  Claimed: number\r\n  Values: Dictionary<number>\r\n}\r\nexport interface IFile {\r\n  Id: string\r\n  Name: string\r\n  Extension: string\r\n  DriveFileId: string\r\n  DisplayName: string\r\n  FolderName: string\r\n  DateCreated: string\r\n  MetaFolderId: string\r\n  Email: string\r\n  IsRerender: boolean\r\n  ReExtension: any\r\n  ReContentId: any\r\n  UserId: string\r\n}\r\nexport enum EnumChannelType {\r\n  Content = 'Content',\r\n  Claimed = 'Claimed',\r\n}\r\n\r\nexport type EChannelType = 'Content' | 'Claimed' | EnumChannelType\r\n\r\nexport interface IJoinNetwork extends EntityTimeBase {\r\n  Id: string\r\n  ChannelId: string\r\n  ChannelNetworkId: string\r\n  ChannelName: string\r\n  UserId: string\r\n  DisplayName: string\r\n  Network: string\r\n  Status: JoinNetworkStatus\r\n  Type: EChannelType\r\n  NetworkId: string\r\n  Percentage: number\r\n  Email: string\r\n  ManagerId: string\r\n  ManagerEmail: string\r\n  ManagerName: string\r\n  ContractId?: string\r\n  ContractName?: string\r\n  ContractOptionId?: string\r\n  ContractOptionName?: string\r\n  ContractOptionDescription?: string\r\n}\r\n\r\nexport enum ReportStatus {\r\n  Unpaid = 'Unpaid',\r\n  Paid = 'Paid',\r\n}\r\n\r\nexport enum ResourceType {\r\n  AudioLabel = 'AudioLabel',\r\n  AssetLabel = 'AssetLabel',\r\n  ClaimedChannel = 'ClaimedChannel',\r\n  ContentChannel = 'ContentChannel',\r\n  TrackMusic = 'TrackMusic',\r\n}\r\nconst temp1 = { ...ResourceType }\r\nif ('AudioLabel' in temp1 || 'AssetLabel' in temp1) {\r\n  delete (temp1 as any).AssetLabel\r\n  delete (temp1 as any).AudioLabel\r\n}\r\nexport const ChannelResourceType = temp1\r\nconst temp2 = { ...ResourceType }\r\nif ('ClaimedChannel' in temp2 || 'ContentChannel' in temp2) {\r\n  delete (temp2 as any).ClaimedChannel\r\n  delete (temp2 as any).ContentChannel\r\n}\r\nexport const AssetResourceType = temp2\r\n\r\nexport interface IReport extends EntityTimeBase {\r\n  Id: string\r\n  Name: string\r\n  Status: ReportStatus\r\n  StartTime: string\r\n  EndTime: string\r\n  ResourceType: ResourceType\r\n  Description: string\r\n  Payout: number\r\n  NoDetails: boolean\r\n  ResourceId: string\r\n  ResourceName: string\r\n  TransactionId: string\r\n  UserId: string\r\n  DisplayName: string\r\n  Email: string\r\n  DatePaid: string\r\n  ExchangeRate?: number\r\n}\r\nexport interface IChannelResourceInfo {\r\n  Name: string\r\n  ChannelId: string\r\n}\r\nexport interface IReportView extends EntityTimeBase {\r\n  Id: string\r\n  ResourceId: string\r\n  ResourceInfo: string\r\n  TotalMoney: number\r\n  Payout: number\r\n  Views: number\r\n  ReportId: string\r\n  CustomId?: string\r\n  EChannelType: EChannelType\r\n  Percentage: number\r\n}\r\nexport interface IChannelReportView extends IReportView {\r\n  ChannelName?: string\r\n  Percentage: number\r\n}\r\nexport interface IAssetReportView extends IReportView {\r\n  Percentage: number\r\n  Label?: string\r\n}\r\nexport enum EClaimRepository {\r\n  Active = 'Active',\r\n  InActive = 'InActive',\r\n}\r\nexport interface IClaimRepository extends EntityTimeBase {\r\n  Id: string\r\n  Name: string\r\n  Description?: string\r\n  RepositoryUri: string\r\n  Status: EClaimRepository\r\n}\r\nexport interface IClaimRepositoryData {\r\n  RepositoryIds: string\r\n  UserIds: string\r\n}\r\nexport interface IClaimRepositoryRequest {\r\n  RepositoryId: string\r\n  UserId: string\r\n}\r\nexport type IClaimRepositoryAllocateRequest = IClaimRepositoryRequest[]\r\nexport interface IClaimRepositoryAllocateSearchRequest {\r\n  RepositoryId: string\r\n  UserId: string\r\n}\r\nexport interface IClaimRepositoryAllocate {\r\n  RepositoryId: string\r\n  UserId: string\r\n  Email: string\r\n  DisplayName: string\r\n  RepositoryName: string\r\n}\r\nexport interface ISyncChannelGroupRequest {\r\n  NetworkId: string\r\n  UserId: string\r\n}\r\nexport interface ISyncChannelGroupModel extends ISyncChannelGroupRequest {\r\n  AddChannelIds: ISyncChannelGroup[]\r\n  DeleteChannelIds: ISyncChannelGroup[]\r\n}\r\nexport interface ISyncChannelGroup {\r\n  Id: string\r\n  ChannelId: string\r\n  ChannelName: string\r\n  Type: string\r\n}\r\nexport interface IAddChannelToGroup {\r\n  DateCreated: string\r\n  DateUpdated: string\r\n  Id: string\r\n  GroupId: string\r\n  ChannelId: string\r\n  Status: string\r\n  ChannelGroup: IChannelGroup\r\n}\r\nexport interface IChannelGroup {\r\n  Id: string\r\n  Name: string\r\n  Type: string\r\n  UserId: string\r\n  User: IUser\r\n  NetworkId: string\r\n  MediaNetwork: IMediaNetwork\r\n}\r\nexport interface IAudioLabel {\r\n  Name: string // => id\r\n  DateCreated: string\r\n  DateUpdated: string\r\n  Description: string\r\n  ImageUrl: string\r\n  UserId: string\r\n  Email: string\r\n  DisplayName: string\r\n}\r\nexport interface IMediaAsset {\r\n  Id: string\r\n  Name: string\r\n  Description?: string\r\n  Length: number\r\n  Extension: string\r\n  Bitrate: number\r\n  SourceId: string\r\n  OriginalName: string\r\n  AuthorName?: any\r\n  LabelName?: any\r\n  DeliveryId: string\r\n  DateCreated: string\r\n  DateUpdated: string\r\n}\r\nexport interface IMediaAuthor {\r\n  Name: string // => id\r\n  DateCreated: string\r\n  DateUpdated: string\r\n  Description: string\r\n  ImageUrl: string\r\n  UserId?: string\r\n  Email: string\r\n  DisplayName: string\r\n}\r\nexport interface IMediaDeliveryStatus {\r\n  Id: string\r\n  Pending: number\r\n  Release: number\r\n  Reject: number\r\n  Error: number\r\n}\r\nexport interface IMediaDelivery {\r\n  Id: string\r\n  Count: number\r\n  Description?: string\r\n  Name: string\r\n  DriveFolderId: string\r\n  UploadType: EUploadType\r\n  DateCreated: string\r\n  DateUpdated: string\r\n  UserId: string\r\n  Email: string\r\n  DisplayName: string\r\n}\r\nexport interface ITagAudioMetaData {\r\n  BitsPerSample: number\r\n  SampleRate: number\r\n  Duration: number\r\n  Bitrate: number\r\n  Length: number\r\n}\r\nexport interface ITagImageMetaData {\r\n  PhotoWidth: number\r\n  PhotoHeight: number\r\n  Length: number\r\n}\r\nexport interface ITagLicenseMetaData {\r\n  Length: number\r\n}\r\nexport interface IMediaValidate {\r\n  MetaData?: File\r\n  AlbumImages: File[]\r\n  Audios: File[]\r\n  Licenses: File[]\r\n  type?: EUploadType\r\n}\r\nexport interface IMediaValidateRequest {\r\n  MetaData?: File\r\n  AlbumImages: {\r\n    Tag: ITagImageMetaData\r\n    File: File\r\n  }[]\r\n  Audios: {\r\n    Tag: ITagAudioMetaData\r\n    File: File\r\n  }[]\r\n  Licenses: {\r\n    Tag: ITagLicenseMetaData\r\n    File: File\r\n  }[]\r\n  type?: EUploadType\r\n}\r\n\r\nexport interface IAudioSessionCheck {\r\n  Items: { Description?: any; UserId: string; Count: number; UploadType: EUploadType }[]\r\n  Token: string\r\n}\r\nexport interface ILicenses {\r\n  Name: string\r\n  SourceId?: string\r\n}\r\nexport interface IInputValidate {\r\n  Data: IAudioMeta[]\r\n  Token: string\r\n}\r\nexport enum EStepType {\r\n  Upload = 'Upload',\r\n  AlbumDetail = 'AlbumDetail',\r\n  Preview = 'Preview',\r\n  Complete = 'Complete',\r\n}\r\nexport enum ExplicitContentType {\r\n  NotExplicit = 'NotExplicit',\r\n  Explicit = 'Explicit',\r\n  CleanedVersion = 'CleanedVersion',\r\n}\r\nexport type EAlbumStatus = 'Pending' | 'Release' | 'Error' | 'Reject'\r\n\r\nexport enum EMatchPolicy {\r\n  Monetizein = 'Monetizein in all countries',\r\n  Block = 'Block in all countries',\r\n  Trackin = 'Trackin in all countries',\r\n}\r\nexport type TMatchPolicy = EMatchPolicy.Monetizein | EMatchPolicy.Block | EMatchPolicy.Trackin\r\nexport interface IAlbumDetail {\r\n  Id: string\r\n  Title: string\r\n  Language: string\r\n  PrimaryArtist: string\r\n  OtherArtists?: string\r\n  LabelName: string\r\n  Status: EAlbumStatus\r\n  Note?: string\r\n  ImageSourceId?: string\r\n}\r\n\r\nexport interface IAlbumDetailFull extends IAlbumDetail {\r\n  ImageFileName: string\r\n  AlbumVersion?: string\r\n  PrimaryGenre: string\r\n  SecondaryGenre: string\r\n  CompositionCopyright: string\r\n  SoundRecordingCopyright: string\r\n  OriginallyReleased: string\r\n  Explicit: string\r\n  HasCompilationAlbum: boolean\r\n  Composers: string\r\n  HasLyricist: boolean\r\n  Lyricists: string\r\n  UPC?: string\r\n  OwnershipTerritory?: string\r\n  MatchPolicy?: TMatchPolicy\r\n  MetaDataId?: string\r\n  DeliveryId: string\r\n  AuthorName?: string\r\n  DateCreated: string\r\n  DateUpdated: string\r\n}\r\n\r\ninterface IGroups {\r\n  AlbumDetail: IAlbumDetailFull\r\n  AudioMetas: IAudioMeta[]\r\n  AlbumImageId?: string\r\n  RootFolderId: string\r\n  AudioFolderId: string\r\n  LicenseFolderId: string\r\n}\r\nexport interface IAudioSessionGet {\r\n  Token: string\r\n  Type: EStepType\r\n  TimStamp: string\r\n  TempFolderId: string\r\n  MediaDelivery: {\r\n    Count: number\r\n    Description?: string\r\n    Name: string\r\n    UploadType: EUploadType\r\n    UserId: string\r\n  }\r\n  Groups: IGroups[]\r\n  Licenses: ILicenses[]\r\n}\r\n\r\nexport interface IAudioMeta {\r\n  AlbumId: string\r\n  SourceId: string\r\n  HasFile: boolean\r\n  Composers?: string\r\n  HasLyricist: boolean\r\n  Lyricists?: string\r\n  Language?: string\r\n  Length: number\r\n  Extension?: string\r\n  Bitrate: number\r\n  SampleRate: number\r\n  BitsPerSample: number\r\n  Duration: number\r\n  TrackNumber: number\r\n  FileName: string\r\n  Title: string\r\n  PrimaryArtist?: string\r\n  OtherArtists?: string\r\n  Genre?: string\r\n  AlbumTitle: string\r\n  AlbumImage?: string\r\n  AlbumReleaseDate: string\r\n  OwnershipTerritory?: string\r\n  MatchPolicy?: string\r\n  LabelName?: string\r\n}\r\n\r\nexport enum EExportType {\r\n  ATYoutube = 'ATYoutube',\r\n  SRYoutube = 'SRYoutube',\r\n}\r\nexport enum EUploadType {\r\n  MetaData = 'MetaData',\r\n  NoMetaData = 'NoMetaData',\r\n}\r\nexport interface IAudioExport {\r\n  Type: string\r\n  DeliveryId: string\r\n}\r\nexport interface IAudioInfo {\r\n  Genre: string\r\n  AlbumTitle: string\r\n  AlbumImage: string\r\n  AlbumReleaseDate: string\r\n  OwnershipTerritory: string\r\n  MatchPolicy: string\r\n  LabelName: string\r\n  TrackNumber: number\r\n  FileName: string\r\n  Title: string\r\n  PrimaryArtist: string\r\n  OtherArtists: string\r\n  SourceId: string\r\n}\r\n"],"names":["MediaNetworkStatus","JoinNetworkStatus","WhitelistStatus","EnumChannelType","ReportStatus","ResourceType","temp1","_objectSpread","AssetLabel","AudioLabel","ChannelResourceType","temp2","ClaimedChannel","ContentChannel","AssetResourceType","EClaimRepository","EStepType","ExplicitContentType","EMatchPolicy","EExportType","EUploadType"],"mappings":"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"}