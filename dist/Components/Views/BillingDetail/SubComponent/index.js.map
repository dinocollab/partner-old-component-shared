{"version":3,"file":"index.js","sources":["../../../../../src/Components/Views/BillingDetail/SubComponent/index.tsx"],"sourcesContent":["import React, { FC } from 'react'\r\nimport { Box, FormControl, FormGroup } from '@mui/material'\r\nimport * as SubLocal from 'partner-local-lib/SubComponents'\r\nimport * as SubCommon from '../../../SubComponent'\r\nimport { getErrorMessage } from '../../../Helper'\r\nimport { IAssetReportView, IReport, ISelectModel } from '../../../Models'\r\n\r\ninterface BillingDetailProps extends SubCommon.FormBase<IAssetReportView> {\r\n  Actions?: JSX.Element\r\n  Report: IReport\r\n  fetchData: (value?: string, signal?: string) => Promise<any[]>\r\n}\r\n\r\n// const SelectMetaFile = SubCommon.CreateSelect2<ISelectModel>()\r\nconst SelectAsset = SubCommon.CreateSelect2<ISelectModel>()\r\n\r\nexport const BillingDetailInfo: FC<BillingDetailProps> = (props) => {\r\n  const fetchAllAsset = (labelName: string) => {\r\n    // return (value: string) => props.fetchAssetSelects_V2(value, labelName)\r\n    return (value: string) => props.fetchData(value, labelName)\r\n  }\r\n  return (\r\n    <SubCommon.WrapFrom Id={props.IdForm} onSubmit={props.onSubmit} IsForm={props.IsForm}>\r\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', maxWidth: '800px', justifyContent: 'space-between' }}>\r\n        <input hidden defaultValue={props.Model?.Id} name='Id' />\r\n        <FormControl fullWidth sx={{ m: 1 }} variant='outlined'>\r\n          <FormGroup className='group-input'>\r\n            <SelectAsset\r\n              title='AssetId'\r\n              fetchData={fetchAllAsset(props.Report.ResourceId)}\r\n              SelectValue={(m) => m.Id}\r\n              GenerateLabel={(m) => m.Name}\r\n              selectedItem={{ Id: '', Name: '' }}\r\n              isOptionEqualToValue={(m1, m2) => m1.Id === m2.Id}\r\n              defaultValue={props.Model?.ResourceId}\r\n              searchInitial={(model) => {\r\n                return props.Model?.ResourceId === model.Id\r\n              }}\r\n              {...getErrorMessage(props.MessageError, 'ResourceId')}\r\n              onBlur={() => {\r\n                props.onBlur && props.onBlur('ResourceId')\r\n              }}\r\n              name='ResourceId'\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n        <FormControl sx={{ m: 1, width: '40ch' }} variant='outlined'>\r\n          <SubLocal.InputOutline\r\n            defaultValue={props.Model?.TotalMoney}\r\n            MaxLength={250}\r\n            Title='TotalMoney'\r\n            maxRows={1}\r\n            minRows={1}\r\n            onBlur={() => props.onBlur && props.onBlur('TotalMoney')}\r\n            {...getErrorMessage(props.MessageError, 'TotalMoney')}\r\n            inputProps={{\r\n              multiline: false,\r\n              name: 'TotalMoney',\r\n              type: 'number',\r\n              inputProps: {\r\n                maxLength: 250,\r\n                step: '0.01'\r\n              }\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl sx={{ m: 1, width: '40ch' }} variant='outlined'>\r\n          <SubLocal.InputOutline\r\n            defaultValue={props.Model?.Views}\r\n            MaxLength={250}\r\n            Title='Views'\r\n            maxRows={1}\r\n            minRows={1}\r\n            onBlur={() => props.onBlur && props.onBlur('Views')}\r\n            {...getErrorMessage(props.MessageError, 'Views')}\r\n            inputProps={{\r\n              multiline: false,\r\n              name: 'Views',\r\n              type: 'number'\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl sx={{ m: 1, width: '40ch' }} variant='outlined'>\r\n          <SubLocal.InputOutline\r\n            defaultValue={props.Model?.Percentage ?? 25}\r\n            MaxLength={250}\r\n            Title='Percentage'\r\n            maxRows={1}\r\n            minRows={1}\r\n            onBlur={() => props.onBlur && props.onBlur('Percentage')}\r\n            {...getErrorMessage(props.MessageError, 'Percentage')}\r\n            inputProps={{\r\n              multiline: false,\r\n              name: 'Percentage',\r\n              type: 'number'\r\n            }}\r\n          />\r\n        </FormControl>\r\n        {/* <FormControl fullWidth sx={{ m: 1 }} variant=\"outlined\">\r\n                <FormGroup className='group-input'>\r\n                    <SelectMetaFile\r\n                        title='MetaFile'\r\n                        fetchData={ComponentAdminService.fetchMetaFileSelects}\r\n                        SelectValue={m => m.Id}\r\n                        GenerateLabel={m => m.Name}\r\n                        selectedItem={{ Id: '', Name: '' }}\r\n                        isOptionEqualToValue={(m1, m2) => m1.Id === m2.Id}\r\n                        defaultValue={props.Model?.MetaFileId}\r\n                        searchInitial={model => {\r\n                            return props.Model?.MetaFileId?.toLowerCase() === model.Id.toLowerCase()\r\n                        }}\r\n                        {...getErrorMessage(props.MessageError, \"MetaFileId\")}\r\n                        onBlur={() => {\r\n                            props.onBlur && props.onBlur(\"MetaFileId\")\r\n                        }}\r\n                        name=\"MetaFileId\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl> */}\r\n        <FormControl fullWidth sx={{ m: 1 }} variant='outlined'>\r\n          {props.Actions}\r\n        </FormControl>\r\n      </Box>\r\n    </SubCommon.WrapFrom>\r\n  )\r\n}\r\n"],"names":["SelectAsset","SubCommon","BillingDetailInfo","props","_props$Model","_props$Model2","_props$Model4","_props$Model5","_props$Model$Percenta","_props$Model6","fetchAllAsset","labelName","value","fetchData","_jsx","Id","IdForm","onSubmit","IsForm","children","_jsxs","Box","sx","display","flexWrap","maxWidth","justifyContent","hidden","defaultValue","Model","name","FormControl","fullWidth","m","variant","FormGroup","className","_objectSpread","title","Report","ResourceId","SelectValue","GenerateLabel","Name","selectedItem","isOptionEqualToValue","m1","m2","searchInitial","model","_props$Model3","getErrorMessage","MessageError","onBlur","width","SubLocal","InputOutline","TotalMoney","MaxLength","Title","maxRows","minRows","inputProps","multiline","type","maxLength","step","Views","Percentage","Actions"],"mappings":"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"}