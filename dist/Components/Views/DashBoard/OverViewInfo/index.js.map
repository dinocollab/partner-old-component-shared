{"version":3,"file":"index.js","sources":["../../../../../src/Components/Views/DashBoard/OverViewInfo/index.tsx"],"sourcesContent":["import React, { Component, FC } from 'react'\r\nimport { Box, Divider, Stack, Typography } from '@mui/material'\r\nimport { CreateUseMediaQuery, FormatterUSD } from 'partner-local-lib/helper'\r\nimport DataUsageOutlinedIcon from '@mui/icons-material/DataUsageOutlined'\r\nimport { BarChart } from '../../../Charts/BarChart'\r\nimport { ChartData, ChartDataset } from 'chart.js'\r\nimport AnalyticsOutlinedIcon from '@mui/icons-material/AnalyticsOutlined'\r\nimport PaidOutlinedIcon from '@mui/icons-material/PaidOutlined'\r\nimport DonutSmallOutlinedIcon from '@mui/icons-material/DonutSmallOutlined'\r\nimport { SkeletonLazyWrap } from '../../../SkeletonLazyView'\r\nimport { HtmlTooltip } from '../../../HtmlTooltip'\r\n\r\nexport type CardKey = string | 'Revenue' | 'LastMonth' | 'Balance'\r\nexport type ItemKey = string | 'Asset' | 'Claimed' | 'Content'\r\nexport interface IChartData {\r\n  Year: number\r\n  Datasets: { [key: ItemKey]: number[] }\r\n  Labels: string[]\r\n  CardData: ICardData\r\n}\r\nexport interface ICardData {\r\n  [key: CardKey]: {\r\n    Value: number\r\n    Data: { [key: ItemKey]: number }\r\n  }\r\n}\r\nexport interface IOverViewInfoProps {\r\n  Year: number\r\n  data?: IChartData\r\n  IsLoading?: boolean\r\n}\r\nconst formatUSD = FormatterUSD().format\r\n\r\n// const colors = [\"#95d469\", \"#5db4f9\", \"#ee955b\"]\r\nconst colors = ['#92e2e3', '#5db4f9', '#5774f4']\r\n\r\nexport class OverViewInfo extends Component<IOverViewInfoProps> {\r\n  generateBarChart = (): ChartData<'bar', number[], string> => {\r\n    return {\r\n      labels: this.props.data?.Labels,\r\n      datasets: Object.keys(this.props.data?.Datasets ?? {}).reduce<ChartDataset<'bar', number[]>[]>((result, key, index) => {\r\n        const data = this.props.data?.Datasets[key] ?? []\r\n        result.push({ label: key, data: data, backgroundColor: colors[index % colors.length] })\r\n        return result\r\n      }, [])\r\n    }\r\n  }\r\n  render() {\r\n    let { CardData } = this.props.data ?? {}\r\n    CardData = CardData ?? {}\r\n    return (\r\n      <Stack sx={{ flex: 1, padding: '12px', gap: '6px', border: '1px solid rgba(0,0,0,0.12)', borderRadius: '4px' }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n          <AnalyticsOutlinedIcon color='primary' />\r\n          <Typography variant='subtitle1' color='primary' sx={{ fontWeight: 700 }}>\r\n            Earnings\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant='body2' sx={{ color: '#979797' }}>\r\n          Year {this.props.Year}\r\n        </Typography>\r\n        <Box />\r\n        <Box sx={{ flex: 1, display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n          <InfoItem\r\n            Title='All revenue'\r\n            Value={formatUSD(CardData?.Revenue?.Value)}\r\n            Description={`All revenue in the year ${this.props.Year}.`}\r\n            TitleColor={'#1976d2'}\r\n            data={CardData?.Revenue?.Data}\r\n            IsLoading={this.props.IsLoading !== false}\r\n            Icon={(isMobile) => <DonutSmallOutlinedIcon sx={{ fontSize: isMobile ? '3rem' : '6rem', color: '#1976d2' }} />}\r\n          />\r\n          <InfoItem\r\n            Title='Last month'\r\n            Value={formatUSD(CardData?.LastMonth?.Value)}\r\n            Description={`The most recent month has been paid in the year ${this.props.Year}.`}\r\n            data={CardData?.LastMonth?.Data}\r\n            IsLoading={this.props.IsLoading !== false}\r\n            Icon={(isMobile) => <DataUsageOutlinedIcon sx={{ fontSize: isMobile ? '3rem' : '6rem', color: '#1976d2' }} />}\r\n            TitleColor={'#1976d2'}\r\n          />\r\n          <InfoItem\r\n            Title='Balances'\r\n            Value={formatUSD(CardData?.Balance?.Value)}\r\n            Description='All revenue has not been paid.'\r\n            data={CardData?.Balance?.Data}\r\n            IsLoading={this.props.IsLoading !== false}\r\n            Icon={(isMobile) => <PaidOutlinedIcon sx={{ fontSize: isMobile ? '3rem' : '6rem', color: '#ffc107' }} />}\r\n            TitleColor={'#ffc107'}\r\n          />\r\n        </Box>\r\n        <Box height='12px' />\r\n        <SkeletonLazyWrap IsLoading={this.props.IsLoading !== false} component={Box} sx={{ flex: 1, minHeight: '400px' }}>\r\n          <BarChart data={this.generateBarChart()} />\r\n        </SkeletonLazyWrap>\r\n      </Stack>\r\n    )\r\n  }\r\n}\r\n\r\ninterface InfoItemProps {\r\n  isFirst?: boolean\r\n  Title: string\r\n  Value: string\r\n  TitleColor: string\r\n  Description: string\r\n  data?: { [key: ItemKey]: number }\r\n  Icon: (isMobile: boolean) => JSX.Element\r\n  IsLoading: boolean\r\n}\r\nconst InfoItem: FC<InfoItemProps> = React.forwardRef((props, ref) => {\r\n  const isMobile = CreateUseMediaQuery()\r\n  return (\r\n    <HtmlTooltip placement='top' title={<TooltipItem data={props.data ?? {}} Description={props.Description} />} arrow>\r\n      <SkeletonLazyWrap\r\n        IsLoading={props.IsLoading}\r\n        component={Box}\r\n        ref={ref}\r\n        sx={{ flex: 1, minWidth: '250px', minHeight: '100px', display: 'flex', border: '1px solid white', background: '#e0e0e0' }}\r\n      >\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', margin: '12px 8px' }}>{props.Icon(isMobile)}</Box>\r\n        <Box sx={{ flex: 1, display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\r\n          <Typography sx={{ fontWeight: 'bold', color: props.TitleColor }}>{props.Title}</Typography>\r\n          <Typography variant='h6'>{props.Value}</Typography>\r\n        </Box>\r\n      </SkeletonLazyWrap>\r\n    </HtmlTooltip>\r\n  )\r\n})\r\n\r\ninterface ITooltipItem {\r\n  Description: string\r\n  data: { [key: ItemKey]: number }\r\n}\r\nconst GenerateItem = (data: { [key: ItemKey]: number }) => {\r\n  return Object.keys(data).map((key) => {\r\n    return (\r\n      <Box key={key} sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Typography sx={{ fontWeight: '600', minWidth: '100px' }}>{key}</Typography>\r\n        <Typography fontWeight={'500'}>{formatUSD(data[key] ?? 0)}</Typography>\r\n      </Box>\r\n    )\r\n  })\r\n}\r\nconst TooltipItem: FC<ITooltipItem> = (props) => {\r\n  return (\r\n    <Box sx={{ maxWidth: '300px', minWidth: '200px' }}>\r\n      {GenerateItem(props.data)}\r\n      <Divider />\r\n      <Typography variant='caption'>\r\n        {props.Description}\r\n        {/* All revenue has been paid in the year 2023. */}\r\n        {/* The most recent month has been paid in the year 2023. */}\r\n        {/* All revenue has not been paid */}\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n"],"names":["formatUSD","FormatterUSD","format","colors","OverViewInfo","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","_this$props$data","_this$props$data$Data","_this$props$data2","labels","props","data","Labels","datasets","Object","keys","Datasets","reduce","result","key","index","_this$props$data$Data2","_this$props$data3","push","label","backgroundColor","_inherits","_createClass","value","render","_this$props$data4","_CardData","_CardData2","_CardData3","_CardData4","_CardData5","_CardData6","_ref","CardData","_jsxs","Stack","sx","flex","padding","gap","border","borderRadius","Box","display","alignItems","children","_jsx","AnalyticsOutlinedIcon","color","Typography","variant","fontWeight","Year","flexDirection","flexWrap","InfoItem","Title","Value","Revenue","Description","TitleColor","Data","IsLoading","Icon","isMobile","DonutSmallOutlinedIcon","fontSize","LastMonth","DataUsageOutlinedIcon","Balance","PaidOutlinedIcon","height","SkeletonLazyWrap","component","minHeight","BarChart","generateBarChart","Component","React","forwardRef","ref","_props$data","CreateUseMediaQuery","HtmlTooltip","placement","title","TooltipItem","arrow","minWidth","background","justifyContent","margin","GenerateItem","map","_data$key","maxWidth","Divider"],"mappings":"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"}