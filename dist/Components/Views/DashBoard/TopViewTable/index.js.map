{"version":3,"file":"index.js","sources":["../../../../../src/Components/Views/DashBoard/TopViewTable/index.tsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\r\nimport { TopViewData } from '../type';\r\nimport { humannumber } from '../../../Helper';\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n    height: 8,\r\n    borderRadius: 5,\r\n    [`&.${linearProgressClasses.colorPrimary}`]: {\r\n        backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n    },\r\n    [`& .${linearProgressClasses.bar}`]: {\r\n        borderRadius: 5,\r\n        backgroundColor: theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8',\r\n    },\r\n}));\r\n\r\ninterface ITopViewTableProps {\r\n    renderName?: (data: TopViewData) => JSX.Element\r\n    data: TopViewData[]\r\n    Prefix?: string\r\n    Subfix?: string\r\n}\r\nexport default class TopViewTable extends Component<ITopViewTableProps> {\r\n    render() {\r\n        const maxView = Math.max(...this.props.data.map(x => x.Value))\r\n        return (\r\n            <Table aria-label=\"simple table\">\r\n                <TableBody>\r\n                    {this.props.data.map((row, index) => {\r\n                        let progressValue = row.Value * 100 / maxView\r\n                        progressValue = progressValue > 2 ? progressValue : 2\r\n                        return <TableRow\r\n                            key={row.Id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell sx={{ flex: 9 }} >\r\n                                {this.props.renderName ? this.props.renderName(row) : row.Name}\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: \"150px\" }} align=\"right\">\r\n                                <BorderLinearProgress variant=\"determinate\" value={progressValue} />\r\n                            </TableCell>\r\n                            <TableCell sx={{ flex: 1 }} align=\"right\">{this.props.Prefix}{humannumber(row.Value)}{this.props.Subfix}</TableCell>\r\n                        </TableRow>\r\n\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n"],"names":["BorderLinearProgress","styled","LinearProgress","_ref","theme","_defineProperty","height","borderRadius","concat","linearProgressClasses","colorPrimary","backgroundColor","palette","grey","mode","bar","TopViewTable","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","render","_this","maxView","Math","max","apply","_toConsumableArray","props","data","map","x","Value","_jsx","Table","children","TableBody","row","index","progressValue","_jsxs","TableRow","sx","border","TableCell","flex","renderName","Name","width","align","variant","Prefix","humannumber","Subfix","Id","Component"],"mappings":"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"}