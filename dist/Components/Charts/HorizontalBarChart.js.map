{"version":3,"file":"HorizontalBarChart.js","sources":["../../../src/Components/Charts/HorizontalBarChart.tsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ChartData,\r\n  ChartOptions,\r\n} from 'chart.js'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { faker } from '@faker-js/faker'\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\r\n\r\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July']\r\n\r\ninterface IProps {\r\n  data?: ChartData<'bar', number[], string>\r\n  options?: ChartOptions<'bar'>\r\n  title?: string\r\n}\r\nexport class HorizontalBarChart extends Component<IProps> {\r\n  getOptions = (title?: string) => ({\r\n    indexAxis: 'y' as const,\r\n    elements: { bar: { borderWidth: 2 } },\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { position: 'right' as const },\r\n      title: { display: true, text: title || 'Horizontal Bar Chart' },\r\n    },\r\n  })\r\n\r\n  getData = (unitName: string = 'Unit') => {\r\n    const data = labels.map((e) => ({ label: e, value: faker.datatype.number({ min: 0, max: 1000 }) }))\r\n    const sortData = data.sort((a, b) => b.value - a.value)\r\n    return {\r\n      labels: sortData.map((e) => e.label),\r\n      datasets: [\r\n        {\r\n          label: unitName,\r\n          data: sortData.map((e) => e.value),\r\n          borderColor: 'rgb(255, 99, 133, 0.6)',\r\n          backgroundColor: 'rgba(255, 99, 133, 0.3)',\r\n        },\r\n      ],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data || this.getData()\r\n    const options: ChartOptions<'bar'> = this.props.options || this.getOptions(this.props.title)\r\n    return <Bar options={options} data={data} />\r\n  }\r\n}\r\nexport default HorizontalBarChart\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","labels","HorizontalBarChart","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","title","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","display","text","unitName","undefined","data","map","e","label","value","faker","datatype","number","min","max","sortData","sort","a","b","datasets","borderColor","backgroundColor","_inherits","_createClass","key","render","props","getData","options","getOptions","_jsx","Bar","Component"],"mappings":"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"}