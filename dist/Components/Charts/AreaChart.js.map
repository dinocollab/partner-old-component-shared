{"version":3,"file":"AreaChart.js","sources":["../../../src/Components/Charts/AreaChart.tsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Title, Tooltip, Legend, Filler, ScatterDataPoint, ChartDataset } from 'chart.js'\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement } from 'chart.js'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler)\r\n\r\nconst labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: { position: 'top' as const },\r\n    title: { display: true, text: 'Chart.js Line Chart' }\r\n  }\r\n}\r\nconst defaultData = [\r\n  {\r\n    fill: true,\r\n    label: 'Audios',\r\n    data: [0, 200, 300, 500, 250, 300, 400, 600, 550],\r\n    borderColor: 'rgb(255, 99, 132)',\r\n    backgroundColor: 'rgba(255, 99, 132, 0.5)'\r\n  },\r\n  {\r\n    fill: true,\r\n    label: 'Albums',\r\n    data: [0, 100, 150, 400, 480, 400, 420, 500, 400],\r\n    borderColor: 'rgb(53, 162, 235)',\r\n    backgroundColor: 'rgba(53, 162, 235, 0.5)'\r\n  }\r\n]\r\n\r\ninterface IProps {\r\n  data?: ChartDataset<'line', (number | ScatterDataPoint | null)[]>[]\r\n  IsLoading?: boolean\r\n}\r\nexport class AreaChart extends Component<IProps> {\r\n  static defaultProps = { data: defaultData }\r\n  render() {\r\n    if (!this.props.data) return\r\n    return <Line options={options} data={{ labels, datasets: this.props.data }} />\r\n  }\r\n}\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","labels","options","responsive","plugins","legend","position","title","display","text","defaultData","fill","label","data","borderColor","backgroundColor","AreaChart","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","render","props","_jsx","Line","datasets","Component"],"mappings":";;;;;;AAKAA,KAAO,CAACC,QAAQ,CAACC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;AAEvG,IAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AACnG,IAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,IAAI;AAChBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;KAAgB;AACpCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,IAAI;AAAEC,MAAAA,IAAI,EAAE;AAAuB;AACtD;CACF;AACD,IAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,IAAI,EAAE,IAAI;AACVC,EAAAA,KAAK,EAAE,QAAQ;AACfC,EAAAA,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACjDC,EAAAA,WAAW,EAAE,mBAAmB;AAChCC,EAAAA,eAAe,EAAE;AAClB,CAAA,EACD;AACEJ,EAAAA,IAAI,EAAE,IAAI;AACVC,EAAAA,KAAK,EAAE,QAAQ;AACfC,EAAAA,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACjDC,EAAAA,WAAW,EAAE,mBAAmB;AAChCC,EAAAA,eAAe,EAAE;AAClB,CAAA,CACF;AAMYC,IAAAA,SAAU,0BAAAC,UAAA,EAAA;AAAA,EAAA,SAAAD,SAAA,GAAA;AAAAE,IAAAA,eAAA,OAAAF,SAAA,CAAA;AAAA,IAAA,OAAAG,UAAA,CAAA,IAAA,EAAAH,SAAA,EAAAI,SAAA,CAAA;AAAA;EAAAC,SAAA,CAAAL,SAAA,EAAAC,UAAA,CAAA;EAAA,OAAAK,YAAA,CAAAN,SAAA,EAAA,CAAA;IAAAO,GAAA,EAAA,QAAA;AAAAC,IAAAA,KAAA,EAErB,SAAAC,MAAMA,GAAA;AACJ,MAAA,IAAI,CAAC,IAAI,CAACC,KAAK,CAACb,IAAI,EAAE;MACtB,OAAOc,GAAA,CAACC,IAAI,EAAC;AAAA1B,QAAAA,OAAO,EAAEA,OAAO;AAAEW,QAAAA,IAAI,EAAE;AAAEZ,UAAAA,MAAM,EAANA,MAAM;AAAE4B,UAAAA,QAAQ,EAAE,IAAI,CAACH,KAAK,CAACb;AAAM;AAAA,OAAA,CAAI;AAChF;AAAC,GAAA,CAAA,CAAA;AAAA,CAAA,CAL4BiB,SAAiB;gBAAnCd,SAAU,EACC,cAAA,EAAA;AAAEH,EAAAA,IAAI,EAAEH;CAAa,CAAA;;;;"}