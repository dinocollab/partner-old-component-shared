{"version":3,"file":"index.js","sources":["../../../src/Components/Helper/index.ts"],"sourcesContent":["import { AxiosError } from 'axios'\r\nimport { ModelBase } from 'partner-local-lib/GridTable'\r\nimport { FormValidator, PartialError } from 'partner-local-lib/helper'\r\nimport ReactDOMServer from 'react-dom/server'\r\n\r\nexport const Sleep = (sec: number) => new Promise((resolve) => setTimeout(resolve, sec))\r\nexport const FetchDelay = async function <TModel>(action: () => Promise<TModel>, sec: number) {\r\n  const [res] = await Promise.all([action(), Sleep(sec)])\r\n  return res\r\n}\r\n\r\nexport const isPromise = (object: any): object is Promise<unknown> => {\r\n  return typeof object === 'object' && typeof object.then === 'function'\r\n}\r\nexport const humanFileSize = (bytes: number, si = false, dp = 1) => {\r\n  const thresh = si ? 1000 : 1024\r\n\r\n  if (Math.abs(bytes) < thresh) {\r\n    return bytes + ' B'\r\n  }\r\n\r\n  const units = si ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\r\n  let u = -1\r\n  const r = 10 ** dp\r\n\r\n  do {\r\n    bytes /= thresh\r\n    ++u\r\n  } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1)\r\n\r\n  return bytes.toFixed(dp) + ' ' + units[u]\r\n}\r\nexport const humanFileSizeNoExtension = (bytes: number, si = false, dp = 1) => {\r\n  const thresh = si ? 1000 : 1024\r\n\r\n  if (Math.abs(bytes) < thresh) {\r\n    return bytes + ' B'\r\n  }\r\n\r\n  const units = si ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\r\n  let u = -1\r\n  const r = 10 ** dp\r\n\r\n  do {\r\n    bytes /= thresh\r\n    ++u\r\n  } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1)\r\n\r\n  return bytes.toFixed(dp)\r\n}\r\n\r\nexport const ConvertFormDataToJson = function <TModel>(form: FormData): Partial<TModel> {\r\n  const data = Array.from(form).reduce<Partial<TModel>>((a: any, b: any[]) => {\r\n    if (!a[b[0]]) {\r\n      a[b[0]] = b[1]\r\n    } else if (Array.isArray(a[b[0]])) {\r\n      a[b[0]].push(b[1])\r\n    } else {\r\n      a[b[0]] = [a[b[0]], b[1]]\r\n    }\r\n    return a\r\n  }, {} as any) as any\r\n\r\n  Object.keys(data).forEach((key) => {\r\n    const value = data[key]\r\n    if (typeof value === 'string' && (value.toString().toLocaleLowerCase() === 'true' || value.toString().toLocaleLowerCase() === 'false')) {\r\n      data[key] = value.toString().toLocaleLowerCase() === 'true'\r\n    }\r\n  })\r\n  return data\r\n}\r\nexport const getErrorMessage = function <TModel>(MessageErrors: PartialError<TModel> | undefined, key: string) {\r\n  return MessageErrors && (MessageErrors as any)[key]\r\n    ? {\r\n        ...(MessageErrors as any)[key][0],\r\n        error: true\r\n      }\r\n    : { error: false }\r\n}\r\nexport const SingleValidate = function <TModel, TPartial = TModel>(\r\n  key: string,\r\n  modelState: TPartial,\r\n  MessageErrors: PartialError<TModel>,\r\n  Validator: FormValidator<TPartial>\r\n) {\r\n  const messageErrors = Validator.run(modelState) as { [key: string]: any }\r\n  if (messageErrors) {\r\n    let errors = (MessageErrors || {}) as { [key: string]: any }\r\n    const keys = Object.keys(modelState as any).filter((key) => !!(modelState as any)[key])\r\n    keys.push(key)\r\n    keys.forEach((key) => {\r\n      if (messageErrors[key]) {\r\n        errors[key] = messageErrors[key]\r\n      } else {\r\n        delete errors[key]\r\n      }\r\n    })\r\n    return errors\r\n  }\r\n  return null\r\n}\r\nexport const GetErrorFromResponse = function <TModel>(error: AxiosError, ModelRender: TModel) {\r\n  const data = error.response?.data as any\r\n  if (data) {\r\n    const keys = Object.keys(ModelRender as any)\r\n    const MessageErrors: PartialError<TModel> | undefined = {}\r\n    keys.forEach((key) => {\r\n      const messages = data[key]\r\n      if (Array.isArray(messages) && messages.length > 0) {\r\n        ;(MessageErrors as any)[key] = [\r\n          {\r\n            message: messages[0]\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    return MessageErrors\r\n  }\r\n}\r\n\r\nexport const ClearFieldEmpty = <TModel>(model: Extract<TModel, ModelBase>) => {\r\n  Object.keys(model).forEach((key: keyof Extract<TModel, ModelBase>) => {\r\n    if (!model[key]) delete model[key]\r\n  })\r\n}\r\n\r\nexport const FormatNumber = new Intl.NumberFormat('en-US')\r\n\r\nexport const FormatterVN = (value: number) =>\r\n  Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n    // These options are needed to round to whole numbers if that's what you want.\r\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n  })\r\n    .format(value)\r\n    .replace('$', '') + ' vnÄ‘'\r\n\r\nexport function stringToColor(string: string) {\r\n  let hash = 0\r\n  let i\r\n\r\n  /* eslint-disable no-bitwise */\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash)\r\n  }\r\n\r\n  let color = '#'\r\n\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff\r\n    color += `00${value.toString(16)}`.slice(-2)\r\n  }\r\n  /* eslint-enable no-bitwise */\r\n\r\n  return color\r\n}\r\n\r\nexport function stringAvatar(name: string) {\r\n  const tmps = name?.split(' ') ?? ['@']\r\n  const name1 = tmps[0]?.[0] || '@'\r\n  const name2 = tmps[1]?.[0] || ''\r\n  return {\r\n    sx: { bgcolor: stringToColor(name) },\r\n    children: `${name1}${name2}`\r\n  }\r\n}\r\n\r\nexport const DeepClone = <TModel>(obj: TModel): TModel => {\r\n  if (Array.isArray(obj)) {\r\n    return obj.map(DeepClone) as TModel\r\n  } else if (typeof obj === 'object' && obj) {\r\n    return Object.keys(obj).reduce((a, b) => {\r\n      a[b] = DeepClone((obj as any)[b] as any)\r\n      return a\r\n    }, {} as any)\r\n  } else {\r\n    return obj\r\n  }\r\n}\r\n/**\r\n * Simple object check.\r\n * @param item\r\n * @returns {boolean}\r\n */\r\nexport function isObject(item: any) {\r\n  return item && typeof item === 'object' && !Array.isArray(item)\r\n}\r\n\r\n/**\r\n * Deep merge two objects.\r\n * @param target\r\n * @param ...sources\r\n */\r\nexport function mergeDeep<TModel = any>(target: any, ...sources: any[]): TModel {\r\n  if (!sources.length) return target\r\n  const source = sources.shift()\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    for (const key in source) {\r\n      if (isObject(source[key])) {\r\n        if (!target[key]) Object.assign(target, { [key]: {} })\r\n        mergeDeep(target[key], source[key])\r\n      } else {\r\n        Object.assign(target, { [key]: source[key] })\r\n      }\r\n    }\r\n  }\r\n\r\n  return mergeDeep(target, ...sources)\r\n}\r\n\r\nexport const humannumber = (bytes: number, dp = 1) => {\r\n  const thresh = 1000\r\n\r\n  if (Math.abs(bytes) < thresh) {\r\n    return bytes + ''\r\n  }\r\n\r\n  const units = ['k', 'M', 'B']\r\n  let u = -1\r\n  const r = 10 ** dp\r\n\r\n  do {\r\n    bytes /= thresh\r\n    ++u\r\n  } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1)\r\n\r\n  return bytes.toFixed(dp) + ' ' + units[u]\r\n}\r\n\r\nexport const SignalMerge = (...signals: (AbortSignal | undefined)[]) => {\r\n  const controller = new AbortController()\r\n  signals.forEach((x) => x?.addEventListener('abort', () => controller.abort()))\r\n  return controller.signal\r\n}\r\n\r\nconst mapExtensionUri: { [key: string]: string } = {}\r\n\r\nconst b64toBlob = (b64Data: string, contentType = '', sliceSize = 512) => {\r\n  const byteCharacters = atob(b64Data)\r\n  const byteArrays = []\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    const slice = byteCharacters.slice(offset, offset + sliceSize)\r\n\r\n    const byteNumbers = new Array(slice.length)\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i)\r\n    }\r\n\r\n    const byteArray = new Uint8Array(byteNumbers)\r\n    byteArrays.push(byteArray)\r\n  }\r\n\r\n  const blob = new Blob(byteArrays, { type: contentType })\r\n  return blob\r\n}\r\nexport const GetSvgExtensionUri = (key: string, element: JSX.Element) => {\r\n  let value = mapExtensionUri[key]\r\n  if (!value) {\r\n    const temp = ReactDOMServer.renderToStaticMarkup(element)\r\n    value = URL.createObjectURL(new Blob([temp], { type: 'image/svg+xml' }))\r\n    mapExtensionUri[key] = value\r\n  }\r\n  return value\r\n}\r\n"],"names":["Sleep","sec","Promise","resolve","setTimeout","FetchDelay","_ref","_asyncToGenerator","_regenerator","m","_callee","action","_yield$Promise$all","_yield$Promise$all2","res","w","_context","n","all","v","_slicedToArray","a","_x","_x2","apply","arguments","isPromise","object","_typeof","then","humanFileSize","bytes","si","length","undefined","dp","thresh","Math","abs","units","u","r","pow","round","toFixed","humanFileSizeNoExtension","ConvertFormDataToJson","form","data","Array","from","reduce","b","isArray","push","Object","keys","forEach","key","value","toString","toLocaleLowerCase","getErrorMessage","MessageErrors","_objectSpread","error","SingleValidate","modelState","Validator","messageErrors","run","errors","filter","GetErrorFromResponse","ModelRender","_error$response","response","messages","message","ClearFieldEmpty","model","FormatNumber","Intl","NumberFormat","FormatterVN","style","currency","format","replace","stringToColor","string","hash","i","charCodeAt","color","concat","slice","stringAvatar","name","_name$split","_tmps$","_tmps$2","tmps","split","name1","name2","sx","bgcolor","children","DeepClone","obj","map","isObject","item","mergeDeep","target","_len","sources","_key","source","shift","assign","_defineProperty","humannumber","SignalMerge","controller","AbortController","_len2","signals","_key2","x","addEventListener","abort","signal","mapExtensionUri","GetSvgExtensionUri","element","temp","ReactDOMServer","renderToStaticMarkup","URL","createObjectURL","Blob","type"],"mappings":"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"}