{"version":3,"file":"index.js","sources":["../../../src/Components/TemplateTable/index.tsx"],"sourcesContent":["import { Box, Typography } from '@mui/material'\r\nimport React, { Component, ComponentClass, ComponentType, createContext } from 'react'\r\nimport {\r\n  ConfigTable,\r\n  CreateTable,\r\n  DataTableProps,\r\n  GridColDefCustom,\r\n  GridInputComponentProps,\r\n  ModelBase,\r\n  TypeTableRef\r\n} from 'partner-local-lib/GridTable'\r\nimport { GridApi, GridCallbackDetails, GridRenderCellParams, GridSelectionModel, GridState } from '@mui/x-data-grid'\r\nimport PanelAction, { IPanelActionProps } from './PanelAction'\r\nimport ItemRowMenu, { IItemRowMenuProps } from './ItemRowMenu'\r\nimport InputFormModal, { InputFormType } from './InputFormModal'\r\nimport FormTest from './FormTest'\r\nimport { DeepClone } from '../Helper'\r\n\r\nexport interface Dictionary<T> {\r\n  [id: string]: T | undefined\r\n}\r\n\r\ninterface TableTemplateOption<TModel> {\r\n  ConfigTable: ConfigTable<TModel>\r\n  MenuField?: keyof Extract<TModel, ModelBase>\r\n}\r\ninterface TemplateTableProps<TModel> {\r\n  data: TModel[]\r\n  PanelAction?: ComponentType<IPanelActionProps>\r\n  ItemRowMenu?: ComponentType<IItemRowMenuProps>\r\n  CreateForm?: ComponentType\r\n  EditForm?: ComponentType<{ data?: any }>\r\n  ConfirmDelete?: ComponentType<{ data?: any }>\r\n  DetailPage?: ComponentType<{ data?: any }>\r\n  ModelView?: ComponentType<{ data?: any }>\r\n  InnerProps?: Partial<GridInputComponentProps>\r\n  TableName?: JSX.Element | string\r\n}\r\n\r\ninterface ITemplateTable {\r\n  CloseModal: () => void\r\n  OpenDetailModal: (Model?: any) => void\r\n  OpenModal: (Type: InputFormType, Model?: any, IsFull?: boolean) => void\r\n  onCreate: () => void\r\n}\r\ninterface ITableTemplateContext extends ITemplateTable {}\r\nexport const TableTemplateContext = createContext<ITableTemplateContext>({} as any)\r\nexport type TRefTableTemplate = ITemplateTable\r\ninterface TemplateTableSate {}\r\nexport class TemplateTableBase<TModel> extends Component<TemplateTableProps<TModel>, TemplateTableSate> {\r\n  // constructor(props: TemplateTableProps<TModel>) {\r\n  //     super(props)\r\n  // }\r\n}\r\nexport declare type TypeTemplateTableRef<TModel> = React.JSXElementConstructor<TemplateTableProps<TModel> & React.RefAttributes<ITemplateTable>>\r\nexport const CreateTemplateTable = function <TModel>(\r\n  optionTables: TableTemplateOption<TModel>,\r\n  OptionExtends?: GridColDefCustom<TModel>\r\n): TypeTemplateTableRef<TModel> {\r\n  //define table\r\n  class TemplateTable extends Component<TemplateTableProps<TModel>, TemplateTableSate> implements ITemplateTable {\r\n    constructor(props: TemplateTableProps<TModel>) {\r\n      super(props)\r\n      this.Table = this.InitialTable()\r\n    }\r\n    OpenModal = (Type: InputFormType, Model?: any, IsFull: boolean = false) => {\r\n      this.refInputModel?.open(Type, Model, IsFull)\r\n    }\r\n    CloseModal = () => {\r\n      this.refInputModel?.handleClose()\r\n    }\r\n    // static defaultProps: Partial<TemplateTableProps> = {\r\n    //     PanelAction, ItemRowMenu,\r\n    //     CreateForm: FormTest,\r\n    //     EditForm: FormTest\r\n    // }\r\n    InitialTable = () => {\r\n      const tempOptions = DeepClone(optionTables)\r\n      if (OptionExtends) {\r\n        Object.assign(tempOptions.ConfigTable.Options, OptionExtends)\r\n      }\r\n      if (tempOptions.MenuField) {\r\n        const FieldConfig = tempOptions.ConfigTable.Options[tempOptions.MenuField]\r\n        const { ItemRowMenu: ItemMenu } = this.props\r\n        if (FieldConfig && ItemMenu) {\r\n          const renderCell = FieldConfig.renderCell\r\n          FieldConfig.renderCell = (params) => {\r\n            return (\r\n              <ItemMenu\r\n                data={params.row}\r\n                onDelete={() => this.onDelete(params.row)}\r\n                onEdit={() => this.onEdit(params.row)}\r\n                onDetailModal={() => this.OpenModal('DETAIL', params.row)}\r\n              >\r\n                {renderCell ? renderCell(params) : params.value}\r\n              </ItemMenu>\r\n            )\r\n          }\r\n        }\r\n      }\r\n      return CreateTable<TModel>(tempOptions.ConfigTable)\r\n    }\r\n    Table: TypeTableRef<DataTableProps<any>>\r\n    GridState?: GridState\r\n    refApiTable?: GridApi\r\n    onStateChange = (GridState: GridState) => {\r\n      this.GridState = GridState\r\n    }\r\n    getSelectedRows = (): TModel[] => {\r\n      if (this.GridState) {\r\n        return this.GridState.selection.map((id) => this.GridState?.rows.idRowsLookup[id]) as TModel[]\r\n      }\r\n      return []\r\n    }\r\n    onSelectionModelChange = (selectionModel: GridSelectionModel, details: GridCallbackDetails) => {\r\n      // const selections = this.getSelectedRows()\r\n      // this.props.UpsetUserSelected(this.getSelectedRows())\r\n    }\r\n    onCreate = () => {\r\n      this.refInputModel?.open('CREATE')\r\n    }\r\n    onEdit = (data: TModel) => {\r\n      this.refInputModel?.open('EDIT', data)\r\n    }\r\n    onDelete = (data: TModel) => {\r\n      // this.props.onDelete && this.props.onDelete(data)\r\n      this.refInputModel?.open('DELETE', data)\r\n    }\r\n    OpenDetailModal = (Model?: TModel) => {\r\n      // this.props.onDelete && this.props.onDelete(data)\r\n      this.refInputModel?.open('DETAIL', Model, true)\r\n    }\r\n    refInputModel: InputFormModal | null = null\r\n    renderModal = () => {\r\n      const { CreateForm, EditForm, ConfirmDelete, DetailPage, ModelView } = this.props\r\n      if (CreateForm || EditForm || DetailPage || ConfirmDelete || ModelView) {\r\n        return (\r\n          <InputFormModal\r\n            ref={(ref) => (this.refInputModel = ref)}\r\n            MapForm={{\r\n              CREATE: CreateForm,\r\n              EDIT: EditForm,\r\n              DELETE: ConfirmDelete,\r\n              DETAIL: DetailPage,\r\n              MODAL: ModelView\r\n            }}\r\n          />\r\n        )\r\n      }\r\n      return ''\r\n    }\r\n    render() {\r\n      const { Table } = this\r\n      const { PanelAction: PanelActionItem, CreateForm, EditForm } = this.props\r\n      return (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', flex: 1 }}>\r\n          <TableTemplateContext.Provider value={this}>\r\n            {this.props.TableName || PanelActionItem ? (\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', margin: '5px', flexWrap: 'wrap', pt: '6px' }}>\r\n                <Box sx={{ display: 'flex', flex: 1, alignItems: 'center' }}>\r\n                  {typeof this.props.TableName === 'string' ? <Typography variant='h5'>{this.props.TableName}</Typography> : this.props.TableName}\r\n                </Box>\r\n                {PanelActionItem ? (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-end', flex: 1 }}>\r\n                    <PanelActionItem onCreate={this.onCreate} ButtonText={'Create'} />\r\n                  </Box>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Box>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Table\r\n              InnerProps={{\r\n                checkboxSelection: true,\r\n                disableSelectionOnClick: true,\r\n                onStateChange: this.onStateChange,\r\n                onSelectionModelChange: this.onSelectionModelChange,\r\n                sx: {\r\n                  border: 0,\r\n                  '& .MuiTablePagination-root .MuiToolbar-root > p': { margin: 0 },\r\n                  '& .MuiDataGrid-columnHeaderTitle': { fontWeight: 700, color: '#3c3c3c' }\r\n                },\r\n                ...(this.props.InnerProps ?? {})\r\n              }}\r\n              data={this.props.data}\r\n            />\r\n            {this.renderModal()}\r\n          </TableTemplateContext.Provider>\r\n        </Box>\r\n      )\r\n    }\r\n  }\r\n  return TemplateTable as any\r\n}\r\n"],"names":["TableTemplateContext","createContext","TemplateTableBase","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","Component","CreateTemplateTable","optionTables","OptionExtends","TemplateTable","_Component2","props","_this","_defineProperty","Type","Model","_this$refInputModel","IsFull","length","undefined","refInputModel","open","_this$refInputModel2","handleClose","tempOptions","DeepClone","Object","assign","ConfigTable","Options","MenuField","FieldConfig","ItemMenu","ItemRowMenu","renderCell","params","_jsx","data","row","onDelete","onEdit","onDetailModal","OpenModal","children","value","CreateTable","GridState","selection","map","id","_this$GridState","rows","idRowsLookup","selectionModel","details","_this$refInputModel3","_this$refInputModel4","_this$refInputModel5","_this$refInputModel6","_this$props","CreateForm","EditForm","ConfirmDelete","DetailPage","ModelView","InputFormModal","ref","MapForm","CREATE","EDIT","DELETE","DETAIL","MODAL","Table","InitialTable","key","render","_this$props$InnerProp","_this$props2","PanelActionItem","PanelAction","Box","sx","display","flexDirection","flex","_jsxs","Provider","TableName","justifyContent","margin","flexWrap","pt","alignItems","Typography","variant","onCreate","ButtonText","InnerProps","_objectSpread","checkboxSelection","disableSelectionOnClick","onStateChange","onSelectionModelChange","border","fontWeight","color","renderModal"],"mappings":"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"}